<?xml version="1.0" encoding="UTF-8"?>
<!--
  The contents of this file are subject to the terms of the Common Development and
  Distribution License (the License). You may not use this file except in compliance with the
  License.

  You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
  specific language governing permission and limitations under the License.

  When distributing Covered Software, include this CDDL Header Notice in each file and include
  the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
  Header, with the fields enclosed by brackets [] replaced by your own identifying
  information: "Portions Copyrighted [year] [name of copyright owner]".

  Copyright Â© 2011 ForgeRock AS. All rights reserved.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.forgerock.openidm</groupId>
        <artifactId>openidm-project</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>
    <artifactId>openidm-util</artifactId>
    <name>OpenIDM utility classes</name>
    <packaging>bundle</packaging>
    <dependencies>
        <dependency>
            <groupId>org.forgerock.commons</groupId>
            <artifactId>json-fluent</artifactId>
        </dependency>
        <dependency>
            <groupId>org.forgerock.commons</groupId>
            <artifactId>json-patch</artifactId>
        </dependency>
        <dependency>
            <groupId>org.forgerock.commons</groupId>
            <artifactId>json-crypto-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.forgerock.openidm</groupId>
            <artifactId>openidm-system</artifactId>
            <version>${openidm.version}</version>
        </dependency>
        <!--dependency>
            <groupId>org.eclipse.wst.jsdt</groupId>
            <artifactId>debug.rhino.debugger</artifactId>
            <version>1.0.300</version>
            <optional>true</optional>
        </dependency-->
        <dependency>
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.rhino</artifactId>
            <version>1.7R2_2</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.fileinstall</artifactId>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.scr.annotations</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/java</directory>
                <includes>
                    <include>META-INF/**/*</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-scr-plugin</artifactId>
                <executions>
                    <execution>
                        <id>generate-scr-scrdescriptor</id>
                        <goals>
                            <goal>scr</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Import-Package>org.eclipse.wst.jsdt.debug.rhino.debugger;resolution:=optional,*
                        </Import-Package>
                        <Export-Package>
                            org.forgerock.openidm.audit.util;version=${openidm.version},
                            org.forgerock.openidm.context;version=${openidm.version},
                            org.forgerock.openidm.crypto;version=${openidm.version},
                            org.forgerock.openidm.metadata;version=${openidm.version},
                            org.forgerock.openidm.objset;version=${openidm.version},
                            org.forgerock.openidm.osgi;version=${openidm.version},
                            org.forgerock.openidm.patch;version=${openidm.version},
                            org.forgerock.openidm.scope;version=${openidm.version},
                            org.forgerock.openidm.script;version=${openidm.version},
                            org.forgerock.openidm.script.javascript;version=${openidm.version},
                            org.forgerock.openidm.sync;version=${openidm.version},
                            org.forgerock.openidm.util;version=${openidm.version}
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>
            <!-- External non-maven dependency management -->
            <plugin>
                <groupId>com.savage7.maven.plugins</groupId>
                <artifactId>maven-external-dependency-plugin</artifactId>
                <version>0.4</version>
                <inherited>false</inherited>
                <configuration>
                    <stagingDirectory>${project.build.directory}/dependencies/</stagingDirectory>
                    <createChecksum>true</createChecksum>
                    <force>false</force>
                    <artifactItems>
                        <artifactItem>
                            <groupId>org.eclipse.wst.jsdt</groupId>
                            <artifactId>debug.rhino.debugger</artifactId>
                            <version>1.0.300</version>
                            <packaging>jar</packaging>
                            <downloadUrl>
                                http://eclipse.ialto.org/webtools/downloads/drops/R3.4.0/S-3.4.0M2-20110922230524/buildrepository/wst4x-sdk/plugins/org.eclipse.wst.jsdt.debug.rhino.debugger_1.0.300.v201109150503.jar
                            </downloadUrl>
                            <install>true</install>
                        </artifactItem>
                        <artifactItem>
                            <groupId>org.eclipse.wst.jsdt</groupId>
                            <artifactId>debug.rhino.debugger</artifactId>
                            <version>1.0.300</version>
                            <packaging>jar</packaging>
                            <classifier>sources</classifier>
                            <downloadUrl>
                                http://eclipse.ialto.org/webtools/downloads/drops/R3.4.0/S-3.4.0M2-20110922230524/buildrepository/wst4x-sdk/plugins/org.eclipse.wst.jsdt.debug.rhino.debugger.source_1.0.300.v201109150503.jar
                            </downloadUrl>
                            <install>true</install>
                        </artifactItem>
                    </artifactItems>
                </configuration>
                <executions>
                    <execution>
                        <id>clean-external-dependencies</id>
                        <phase>clean</phase>
                        <goals>
                            <!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:clean-external -->
                            <goal>clean-external</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>resolve-install-external-dependencies</id>
                        <phase>process-resources</phase>
                        <goals>
                            <!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:resolve-external -->
                            <goal>resolve-external</goal>
                            <!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:install-external -->
                            <goal>install-external</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>deploy-external-dependencies</id>
                        <phase>deploy</phase>
                        <goals>
                            <!-- mvn com.savage7.maven.plugins:maven-external-dependency-plugin:deploy-external -->
                            <goal>deploy-external</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
