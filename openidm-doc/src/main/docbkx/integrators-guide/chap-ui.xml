<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2014 ForgeRock AS
  !    
-->
<chapter xml:id='chap-ui'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
 http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>OpenIDM User Interface</title>

 <para>
  OpenIDM provides a customizable, browser-based user interface. The default
  user interface enables administrative users to create, modify and delete user
  accounts. It provides role-based access to tasks based on BPMN2 workflows, and
  allows users to manage certain aspects of their own accounts, including
  configurable self-service registration.
 </para>

 <section xml:id="ui-overview">
  <title>Overview of the Default User Interface</title>
  <para>
   The default user interface is provided as a reference implementation that
   demonstrates the capabilities of the REST API. You can modify certain aspects
   of the default user interface according to the requirements of your
   deployment.
  </para>
  <para>
   To access the user interface, install and start OpenIDM, then point your
   browser to <link xlink:href="https://localhost:8443/openidmui" />. If you
   have not installed a certificate that is trusted by a certificate authority,
   you are prompted with an "Untrusted Connection" warning the first time you
   log in to the UI.
  </para>
  <para>
   Log in as the default administrative user (Login: openidm-admin, Password:
   openidm-admin) or as an existing user in the repository. The display differs,
   depending on the role of the user that has logged in.
  </para>
  <para>
   For an administrative user (role <literal>openidm-admin</literal>), two tabs
   are displayed - Dashboard and Users. The Dashboard tab lists any tasks
   assigned to the user who has logged in, processes available to be invoked,
   and any notifications for that user.
  </para>
  <para>
   The following image shows the Dashboard tab for the administrative user when
   no tasks, processes, or notifications are available.
  </para>
  <mediaobject>
   <alt>OpenIDM UI Administrator View - Dashboard</alt>
   <imageobject>
   <imagedata fileref="images/ui-admin-view.png" format="PNG" />
   </imageobject>
</mediaobject>
  <para>
   The Users tab is only available to administrative users and provides an
   interface to manage user entries (OpenIDM managed objects under
   <literal>managed/user</literal>).
  </para>
  <para>
   The following image shows the Users tab after with the two sample users
   created after a reconciliation process from Sample 2b.
  </para>
  <mediaobject>
   <alt>OpenIDM UI Administrator View - Users</alt>
   <imageobject>
   <imagedata fileref="images/ui-users-tab.png" format="PNG" />
   </imageobject>
  </mediaobject>
  <para>
   You can sort the list of users alphabetically, by any of the column values.
   Click on the column title to sort.
  </para>
  <para>
   The <literal>Profile</literal> link enables the user to modify his username
   or password. The <literal>Change Security Data</literal> link, accessed from
   the top of the screen, or from the user's Profile page enables the user to
   change his password and, if this functionality has been enabled, to select a
   new security question.
  </para>
  <para>
   Password changes are subject to the default password policy, as shown in the
   following password update screen.
  </para>
  <mediaobject>
   <alt>OpenIDM UI - Password Change</alt>
   <imageobject>
   <imagedata fileref="images/ui-password-change.png" format="PNG" />
   </imageobject>
  </mediaobject>
  <para>
   For a regular user (role <literal>openidm-authorized</literal>), the Users
   tab is not displayed. By default, regular users cannot manage user accounts,
   except for certain aspects of their own accounts.
  </para>
 </section>

 <section xml:id="ui-configuring">
  <title>Configuring the Default User Interface</title>
    
  <para>
   The following sections outline the configurable aspects of the default user
   interface.
  </para>
  
  <section xml:id="ui-self-registration">
   <title>Enabling Self-Registration</title>
  
   <para>
    Self-registration (the ability for new users to create their own accounts)
    is disabled by default. To enable self-registration, set
    <literal>"selfRegistration"</literal> to <literal>true</literal> in the UI
    configuration file (<filename>conf/ui-configuration.json</filename>).
   </para>

    <programlisting language="javascript">
{
    "configuration" : {
        "selfRegistration" : true,
...    
    </programlisting>
    <para>
     When self-registration is enabled, a "Register your account" link is
     provided on the login page. When a user creates an account on the account
     registration page, a managed object is created in the OpenIDM repository.
     The default policies for managed objects are applied during account
     creation.
    </para>
    <mediaobject>
     <alt>OpenIDM UI - Self Registration</alt>
     <imageobject>
     <imagedata fileref="images/ui-register-account.png" format="PNG" />
     </imageobject>
    </mediaobject>
    <para>
     User objects created using self-registration automatically have the role
     <literal>openidm-authorized</literal>.
    </para>
   </section>
  
  <section xml:id="ui-security-questions">
   <title>Configuring Security Questions</title>
   <para>
    In the event that a user forgets his password, a password reset function
    enables registered users to reset their own passwords. To guard against
    unauthorized access, you can specify that users be prompted with one or
    more security questions when they request a password reset.
   </para>
   <para>
    Security questions are disabled by default. To enable them, set
    <literal>"securityQuestions"</literal> to <literal>true</literal> in the UI
    configuration file (<filename>conf/ui-configuration.json</filename>).
   </para>
   <programlisting language="javascript">
{
    "configuration" : {
        "securityQuestions" : true,
...    
   </programlisting>
   <para>
    A default set of questions is provided, but you can add to these, or
    overwrite them. Specify the list of questions to be asked in the
    <filename>conf/ui-secquestions.json</filename> file.
   </para>
   <para>
    Refresh your browser after this configuration change for the change to be
    picked up by the UI.
   </para>
   <para>
    When security questions are enabled, the following panel is included on the
    self registration page.
   </para>
   <mediaobject>
    <alt>OpenIDM UI - Security Questions</alt>
    <imageobject>
    <imagedata fileref="images/ui-security-questions.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    In addition, a "Reset your password" link is provided on the login page.
    When a user attempts to reset her password, she is prompted for the
    response to the security question that she set up during registration.
   </para>
   <mediaobject>
    <alt>OpenIDM UI - Reset Password</alt>
    <imageobject>
    <imagedata fileref="images/ui-reset-password.png" format="PNG" />
    </imageobject>
   </mediaobject>
   <note>
    <para>
     If security questions are enabled <emphasis>after</emphasis> a specific
     user has registered, that particular user will be unable to use the
     password reset functionality.
    </para>
   </note>
  </section>

  <section xml:id="ui-minimum-length">
   <title>Minimum Length Security Answers</title>

   <para>
    The password, passphrase, and security answer are all associated with
    some minimum length. To change that minimum, edit the
    <filename>conf/policy.json</filename> file.
    Navigate to the appropriate section. Set the <literal>minLength</literal>
    option to the desired number.
   </para>

   <para>
    For example, the following excerpt from the
    <filename>conf/policy.json</filename> file shows a default
    <literal>minLength</literal> of 16 associated with the security answer.
   </para>

   <programlisting language="javascript">
{
    "policyId" : "minimum-length",
    "params" : {
        "minLength" : 16
    }
},</programlisting>

  </section>
  
  <section xml:id="ui-site-identification">
   <title>Enabling Site Identification</title>
   <para>
    To ensure that users are entering their details onto the correct site, you
    can enable site identification. Site identification provides a preventative
    measure against phishing.
   </para>
   <para>
    With site identification enabled, a user is presented with a range of images
    from which he can select when he registers his account, and prompted to
    specify his own <emphasis>site phrase</emphasis>. The selected site image
    and phrase are displayed on login, to confirm that the user is logging in to
    the legitimate site.
   </para>
   <para>
    To enable site identification, set <literal>"siteIdentification"</literal>
    to <literal>true</literal> in the UI configuration file
    (<filename>conf/ui-configuration.json</filename>).
   </para>
   <programlisting language="javascript">
{
    "configuration" : {
        "siteIdentification" : true,
...    
    </programlisting>
    <para>
     Refresh your browser after this configuration change for the change to be
     picked up by the UI.
    </para>
   <para>
    When site identification is enabled, the following panel is included on the
    self registration page.
   </para>
   <mediaobject>
    <alt>OpenIDM UI - Site Identification</alt>
    <imageobject>
    <imagedata fileref="images/ui-site-identification.png" format="PNG" />
    </imageobject>
   </mediaobject>
   <para>
    A default list of four images is presented for site identification. The
    images are defined in the <literal>siteImages</literal> property in the
   <filename>conf/ui-configuration.json</filename> file:
   </para>
   <programlisting language="javascript">
"siteImages" : [
"images/passphrase/mail.png",
"images/passphrase/user.png",
"images/passphrase/report.png",
"images/passphrase/twitter.png"
],
...    
   </programlisting>
   <para>
    You can change the default images, and include additional images, by
    placing image files in the <filename>ui/extension/images</filename> folder
    and modifying the <literal>siteImages</literal> property in the
    <filename>ui-configuration.json</filename> file to point to the new images.
    Refresh your browser for the change to take effect.
   </para>
   <para>
    The following example assumes an image file named
    <filename>my-new-image.jpg</filename>, located in
    <filename>ui/extension/images</filename>.
   </para>
   <programlisting language="javascript">
"siteImages" : [
"images/passphrase/mail.png",
"images/passphrase/user.png",
"images/passphrase/report.png",
"images/passphrase/twitter.png",
"images/my-new-image.jpg"
],
...
   </programlisting>
   <para>
    Note that the default image files are located in
    <filename>ui/default/enduser/public/images/passphrase</filename>.
   </para>
  </section>
  
  <section xml:id="ui-country-list">
   <title>Configuring the Country List</title>
   <para>
    The default user profile includes the ability to select the user's country
    and state or province. To specify the countries, and the associated states
    or provinces, that appear in these drop down lists,  edit the
    <filename>conf/ui-countries.json</filename> file. For example, to add 
    Norway to the list of countries, you would add the following to the 
    <filename>conf/ui-countries.json</filename> file:
   </para>
   <programlisting language="javascript">
{
    "key" : "norway",
    "value" : "Norway",
    "states" : [
        {
            "key" : "akershus",
            "value" : "Akershus"
        },
        {
            "key" : "aust-agder",
            "value" : "Aust-Agder"
        },
        {
            "key" : "buskerud",
            "value" : "Buskerud"
        },
...
   </programlisting>
   <para>
    Refresh your browser after this configuration change for the change to be
    picked up by the UI.
   </para>
  </section>
 </section>

 <section xml:id="ui-managing-users">
  <title>Managing User Accounts With the User Interface</title>
  <para>
   Only administrative users (with the role <literal>openidm-admin</literal>)
   can add, modify, and delete user accounts. Regular users can modify certain
   aspects of their own accounts.
  </para>

  <procedure xml:id="add-user-account">
   <title>To Add a User Account</title>
   <step>
    <para>
     Log into the user interface as an administrative user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click Add User.
    </para>
   </step>
   <step>
    <para>
     Complete the fields on the Create new account page.
    </para>
    <para>
     Most of these fields are self-explanatory. Be aware that the user interface
     is subject to policy validation, as described in <link
     xlink:href="integrators-guide#chap-policies" 
     xlink:role="http://docbook.org/xlink/role/olink">
     <citetitle>Using Policies to Validate Data</citetitle></link>. So, for
     example, the Email address must be of valid email address format, and the
     Password must comply with the password validation settings that are
     indicated in the panel to the right.
    </para>
    <para>
     The Admin Role field reflects the roles that are defined in the
     <filename>ui-configuration.json</filename> file, as well as any managed
     roles that have been added. By default, the roles are mapped as follows:
    </para>
    <programlisting language="javascript">
"roles" : {
    "openidm-admin" : "Administrator",
    "openidm-authorized" : "User",
    "openidm-tasks-manager" : "Tasks Manager"
},  </programlisting>
    <para>
     A user can be assigned more than one role. Only users with the
     <literal>tasks-manager</literal> role can assign tasks to any candidate
     user for that task.
    </para>
   </step>
  </procedure>

  <mediaobject>
   <alt>OpenIDM UI - Create User Account</alt>
   <imageobject>
    <imagedata fileref="images/ui-create-account.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <procedure xml:id="ui-update-account">
   <title>To Update a User Account</title>  
   <step>
    <para>
     Log into the user interface as an administrative user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user that you want to update.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, modify the fields you want to change and click
     Update.
    </para>
    <para>
     The user account is updated in the OpenIDM repository.
    </para>
   </step>
  </procedure>
 
  <procedure xml:id="deactivate-account">
   <title>To Deactivate a User Account</title>
   <step>
    <para>
     Follow steps 1-3 in <xref linkend="ui-update-account" />.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, select Inactive from the Account status list.
    </para>
   </step>
   <step>
    <para>
     Click Update.
    </para>
    <para>
     The user account is deactivated and the user can no longer log in to the
     system.
    </para>
    <para>
     Inactive users are indicated with a X icon in the Status column of the
     Users page. The following image shows that Steven Carter's account has been
     deactivated.
    </para>
   </step>  
  </procedure>

  <mediaobject>
   <alt>OpenIDM UI - Deactivate User Account</alt>
   <imageobject>
    <imagedata fileref="images/ui-deactivate-account.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <procedure xml:id="reset-user-password">
   <title>To Reset a User's Password</title>
   <para>
    Users can change their own passwords by following the Change Security Data
    link in their profiles. This process requires that users know their existing
    passwords.
   </para>
   <para>
    In a situation where a user forgets his password, an administrator can reset
    the password of that user without knowing the user's existing password.
   </para>
   <step>
    <para>
     Follow steps 1-3 in <xref linkend="ui-update-account" />.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, click Change password.
    </para>
   </step>
   <step>
    <para>
     Enter a new password that conforms to the password policy and click Update.
    </para>
    <para>
     The user password is updated in the repository.
    </para>
   </step>  
  </procedure>
 
  <procedure xml:id="delete-user-account">
   <title>To Delete a User Account</title>  
   <step>
    <para>
     Log into the user interface as an administrative user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user that you want to delete.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, click Delete.
    </para>
   </step>
   <step>
    <para>
     Click OK to confirm the deletion.
    </para>
    <para>
     The user is deleted from the internal repository.
    </para>
   </step>
  </procedure>
 </section>

 <section xml:id="ui-managing-workflows">
  <title>Managing Workflows From the User Interface</title>
  <para>
   The UI is integrated with the embedded Activiti worfklow engine, enabling
   users to interact with workflows. Available workflows are displayed under the
   Processes item on the Dashboard. In order for a workflow to be displayed
   here, the workflow definition file must be present in the
   <filename>openidm/workflow</filename> directory.
  </para>
  <para>
   A sample workflow integration with the user interface is provided in
   <filename>openidm/samples/workflow</filename>, and documented in <link
   xlink:href="integrators-guide#example-provisioning-workflow"
   xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Sample Workflow -
   Provisioning User Accounts</citetitle></link>. Follow the steps in that
   sample for an understanding of how the workflow integration works.
  </para>
  <para>
   Access to workflows is based on OpenIDM roles, and is configured in the file
   <filename>conf/process-access.json</filename>. By default all users with the
   role <literal>openidm-authorized</literal> or
   <literal>openidm-admin</literal> can invoke any available workflow. The
   default <filename>process-access.json</filename> file is as follows:
  </para>
  <programlisting language="javascript">
{
    "workflowAccess" : [
        {
            "propertiesCheck" : {
                "property" : "_id",
                "matches" : ".*",
                "requiresRole" : "openidm-authorized"
            }
        },
        {
            "propertiesCheck" : {
                "property" : "_id",
                "matches" : ".*",
                "requiresRole" : "openidm-admin"
            }
        }
    ]
}  
  </programlisting>
  <variablelist>
   <varlistentry>
    <term><literal>"property"</literal></term>
    <listitem>
     <para>
      Specifies the property used to identify the process definition. By default,
      process definitions are identified by their <literal>_id</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>"matches"</literal></term>
    <listitem>
     <para>
      A regular expression match is performed on the process definitions,
      according to the specified property. The default
      (<literal>"matches" : ".*"</literal>) implies that all process definition
      IDs match.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>"requiresRole"</literal></term>
    <listitem>
     <para>
      Specifies the OpenIDM role that is required for users to have access to
      the matched process definition IDs. In the default file, users with the
      role <literal>openidm-authorized</literal> or
      <literal>openidm-admin</literal> have access.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   To extend the process action definition file, identify the processes to which
   users should have access, and specify the qualifying user roles. For example,
   if you wanted to restrict access to a process definition whose ID was
   <literal>567</literal>, to users with the role <literal>ldap</literal> you
   would add the following to the <filename>process-access.json</filename> file:
  </para>
  <programlisting>
{
    "propertiesCheck" : {
        "property" : "_id",
        "matches" : "567",
        "requiresRole" : "ldap"
    }
}
  </programlisting>
 </section>

 <section xml:id="ui-customizing">
  <title>Changing the UI Theme</title>
  <para>
   You can customize the theme of the default user interface to apply your own
   branding. The easiest way to adjust the UI theme, is to edit the properties
   in the UI theme configuration file
   (<filename>/path/to/openidm/conf/ui-themeconfig.json</filename>). This file
   stores detailed color values, background image paths, and a number of other
   common styling options. Because the UI theme configuration file is part of
   the configuration store, it is shared by all nodes in a cluster. Changes made
   to this file do therefore not have to be replicated manually across nodes.
  </para>
  <para>
   To change theme elements that are not included in the UI theme configuration
   file, you can create a custom theme in the
   <filename>openidm/ui/extension</filename> directory. By default the user
   interface reads the stylesheets and images from the
   <filename>openidm/ui/default</filename> directory. Do not modify the files in
   this default directory as there is no guarantee that your changes will not be
   overwritten in the next OpenIDM release. Modifications made in the
   <filename>openidm/ui/extension</filename> directory can be maintained across
   product upgrades. The UI searches the <literal>extension</literal> directory
   first and applies any styles or images located in this directory. Note that
   files added to the <literal>extension</literal> directory must be manually
   copied between every node in a cluster.
  </para>
  <para>
   If you want to update the view logic of the UI, you cannot simply add files
   to the extensions folder. It is assumed that if your deployment requires that
   level of control of the user interface, you are no longer going to want to be
   automatically upgraded with subsequent releases. As such, you need to take on
   the task of maintaining a fork of the UI.
  </para>

  <section xml:id="ui-style">
   <title>Changing the Default Stylesheet</title>
   <para>
    Most changes to the UI stylesheets can be made in the UI theme configuration
    file (<filename>conf/ui-themeconfig.json</filename>).
   </para>
   <para>
    With the following modification made to that file, the background color of
    the UI is changed to dark grey.
   </para>
   <screen><userinput>$ grep "background-color" /path/to/openidm/conf/ui-themeconfig.json</userinput>
<computeroutput>"background-color" : "#ababab",</computeroutput>
   </screen>
     <para>
      Refresh your browser window for the change to appear.
     </para>
   <para>
    The default stylesheets are located in the
    <filename>openidm/ui/default/enduser/public/css</filename> directory. To
    customize the stylesheets beyond the properties available in the UI theme
    configuration file, copy the default stylesheets to
    <filename>openidm/ui/extension/css</filename>, and edit them according to
    your requirements.
   </para>
  </section>

  <section xml:id="ui-logo">
   <title>Changing the Default Logo</title>
   <para>
    The default logo is located in the
    <filename>openidm/ui/default/enduser/public/images</filename> directory.
    Any file named <filename>logo.png</filename>, added to the directory
    <filename>openidm/ui/extension/images</filename>, will replace the default
    logo when the browser is refreshed.
   </para>
   <para>
    To specify a different file name, or to control the size, and other
    properties of the image file that is used for the logo, adjust the
    <literal>logo</literal> property in the UI theme configuration file
    (<filename>conf/themeconfig.json</filename>).
   </para>
   <para>
    The following change to the UI theme configuration file points to an image
    file named <filename>example-logo.png</filename>, in the
    <filename>openidm/ui/extension/images</filename> directory.
   </para>
   <programlisting language="javascript">...
   "logo" : {
       "src" : "images/example-logo.png",
       "title" : "Example.com",
       "alt" : "Example.com",
       "height" : "80",
       "width" : "120"
   },
...</programlisting>
   <para>
    Refresh your browser window for the new logo to appear.
   </para>
  </section>

  <section xml:id="ui-locale">
   <title>Changing the Language of the UI</title>
   <para>
    Currently, the UI is provided only in US English. You can translate the UI
    and specify that your own locale is used. The following example shows how to
    translate the UI into French.
   </para>
   <procedure>
    <step>
     <para>
      Copy the default locale to a new folder in the same location
      (<filename>openidm/ui/default/enduser/public/locales</filename>):
     </para>
     <screen>$ cd /path/to/openidm/ui/default/enduser/public/locales
$ cp -R en/ fr/</screen>
     <para>
      The new locale (<literal>fr</literal>) now contains the default
      <filename>translation.json</filename> file.
     </para>
     <screen><userinput>$ ls fr/</userinput>
<computeroutput>translation.json</computeroutput></screen>
    </step>
    <step>
     <para>
      Translate the values of the properties in the
      <filename>fr/translate.json</filename> file. Do <emphasis>not</emphasis>
      translate the property names. For example:
     </para>
     <programlisting language="javascript">...
"UserMessages" : {
    "changedPassword" : "Mot de passe a été modifié",
    "profileUpdateFailed" : "Problème lors de la mise à jour du profil",
    "profileUpdateSuccessful" : "Profil a été mis à jour",
    "userNameUpdated" : "Nom d'utilisateur a été modifié",
.... </programlisting>
    </step>
    <step>
     <para>
      Change the UI configuration to use the new locale by setting the value of
      the <literal>lang</literal> property in the
      <filename>/path/to/openidm/conf/ui-configuration.json</filename> file, as
      follows:
     </para>
     <screen>"lang" : "fr",</screen>
    </step>
    <step>
     <para>
      Refresh your browser window for the modification to be applied.
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="ui-project-config">
   <title>Creating a Project-Specific UI Theme</title>
   <!--TODO this is not working for me -->
   <para>
    You can create specific UI themes for different projects and then point a
    particular UI instance to use a defined theme on startup. To create a
    complete custom theme, follow these steps:
   </para>
   <procedure>
    <step>
     <para>
      Shut down the OpenIDM instance, if it is running. In the Felix
      administration console, type:
     </para>
     <screen>shutdown
-&gt;</screen>
    </step>
    <step>
     <para>
      Clear the <literal>felix-cache</literal> directory.
     </para>
     <screen>$ rm -rf felix-cache</screen>
    </step>
    <step>
     <para>
      Copy the entire default UI theme to an accessible location. For example:
     </para>
     <screen>$ cd /path/to/openidm/ui
$ cp -r default ../new-project-theme</screen>
    </step>
    <step>
     <para>
      In the copied theme, modify the required elements, as described in the
      previous sections. Note that nothing is copied to the extension folder in
      this case - changes are made in the copied theme.
     </para>
    </step>
    <step>
     <para>
      In the <literal>openidm/conf/boot/boot.properties</literal> file, add the
      following line, specifying the location of the new theme. The path is
      relative to the installation root of the OpenIDM instance.
     </para>
     <screen>openidm.ui.fileinstall.dir=new-project-theme</screen>
    </step>
    <step>
     <para>
      Restart OpenIDM.
     </para>
     <screen>$ cd /path/to/openidm
$ ./startup.sh</screen>
    </step>
    <step>
     <para>
      Relaunch the UI in your browser. The UI is displayed with the new custom
      theme.
     </para>
    </step>
   </procedure>
  </section>
 </section>

 <section xml:id="ui-external-password-reset">
  <title>Using an External System for Password Reset</title>
  <para>
   By default, the password reset mechanism is handled internally, in OpenIDM.
   You can reroute password reset in the event that a user has forgotten his
   password, by specifying an external URL to which password reset requests are
   sent. Note that this URL applies to the password reset link on the login page
   only, not to the security data change facility that is available after a user
   has logged in.
  </para>
  <para>
   To set an external URL to handle password reset, set the
   <literal>passwordResetLink</literal> parameter in the UI configuration file
   (<filename>conf/ui-configuration.json</filename>) file. The following example
   sets the <literal>passwordResetLink</literal> to
   <literal>https://accounts.example.com/account/reset-password</literal>.
  </para>
  <screen>passwordResetLink: "https://accounts.example.com/reset-password"</screen>
  <para>
   The <literal>passwordResetLink</literal> parameter takes either an empty
   string as a value (which indicates that no external link is used) or a full
   URL to the external system that handles password reset requests.
  </para>
  <note>
   <para>
    External password reset and security questions for internal password reset
    are mutually exclusive. Therefore, if you set a value for the
    <literal>passwordResetLink</literal> parameter, users will not be prompted
    with any security questions, regardless of the setting of the
    <literal>securityQuestions</literal> parameter.
   </para>
  </note>
 </section>

 <section xml:id="ui-external-logout">
  <title>Providing a Logout URL to External Applications</title>
  <para>
   By default, a UI session is invalidated when a user clicks on the Log out
   link. In certain situations your external applications might require a
   distinct logout URL to which users can be routed, to terminate their UI
   session.
  </para>
  <para>
   The logout URL is <literal>#logout</literal>, appended to the UI URL, for
   example, <literal>https://localhost:8443/openidmui/index.html#logout/</literal>.
  </para>
  <para>
   The logout URL effectively performs the same action as clicking on the Log
   out link of the UI.
  </para>
 </section>

 <section xml:id="ui-path">
  <title>Changing the UI Path</title>
  <para>
   By default, the UI is registered at a specific URL
   (<literal><replaceable>context-root</replaceable>/openidmui</literal>). To
   override the default URL and specify your own path, edit the
   <filename>openidm/conf/ui.context-enduser.json</filename> file, setting the
   <literal>urlContextRoot</literal> property to the new URL. For example, to
   change the path to
   <literal><replaceable>context-root</replaceable>/exampleui</literal>, edit
   the file as follows:
  </para>
  <screen>"urlContextRoot" : "/exampleui",</screen>
 </section>

 <section xml:id="ui-disabling">
  <title>Disabling the UI</title>
  <para>
   The UI is packaged as a separate bundle that can be disabled in the
   configuration before server startup. To disable the registration of the UI
   servlet, edit the <filename>openidm/conf/ui.context-enduser.json</filename>
   file, setting the <literal>enabled</literal> property to false:
  </para>
  <screen>"enabled" : false,</screen>
 </section>
</chapter>