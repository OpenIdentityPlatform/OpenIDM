<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2014 ForgeRock AS
  !    
-->
<chapter xml:id='chap-ui'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
 http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>OpenIDM Web-based User Interfaces</title>

 <para>
  OpenIDM provides a customizable, browser-based user interface, known as the
  Data Management UI. To take full advantage of this interface, you can
  configure OpenIDM <link xlink:show="new"
                          xlink:href="integrators-guide#managed-objects"
        xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Managed
  Objects</citetitle></link> under <literal>managed/user</literal>. Most of the
  <link xlink:show="new" xlink:href="install-guide#chap-samples"
  xlink:role="http://docbook.org/xlink/role/olink"><citetitle>OpenIDM
  Samples</citetitle></link> demonstrate how you can deploy OpenIDM with managed
  users.
 </para>

 <para>
  The Data Management UI interface enables administrative users to create,
  modify, and delete user and other accounts. It provides role-based access to
  tasks based on BPMN2 workflows, and allows users to manage certain aspects of
  their own accounts, including configurable self-service registration. When
  OpenIDM starts, you can access the Data Management UI at
  <literal>https://localhost:8443/openidmui</literal>.
 </para>

 <para>
  OpenIDM also provides a configurable administrative user interface (Admin UI)
  that allows you to configure connectors, customize managed objects, set up
  attribute mappings, and more. When OpenIDM starts, you can access the Admin UI
  at <literal>https://localhost:8443/admin</literal>.
 </para>

 <para>
  The first time you log into either UI as the <literal>openidm-admin</literal>
  administrative user, the default password is <literal>openidm-admin</literal>.
  As that default password is not secure, we recommend that you change that
  password in production. However, you can bypass that window, by clicking the
  X in the upper right corner.
 </para>

 <mediaobject>
  <alt>OpenIDM UI Administrator Password Change</alt>
  <imageobject>
   <imagedata fileref="images/ui-admin-password-change.png" format="PNG" />
  </imageobject>
 </mediaobject>

 <section xml:id="ui-admin">
  <title>Configuring OpenIDM from the Admin UI</title>

  <para>
   You can set up a basic configuration for OpenIDM with the Administrative User
   Interface (Admin UI).
  </para>

  <para>
   Through the Admin UI, you can connect to resources, configure attribute
   mapping, and set up managed objects, reconciled on a defined schedule.
  </para>

  <para>
   You can customize the configuration of connectors, managed objects,
   mapping between resources, and more. You can add and edit properties to be
   synchronized, configure correlation queries, and enable LiveSync.
  </para>

  <para>
   To access the initial Admin UI screen, navigate to
   <literal>https://localhost:8443/admin</literal>.
  </para>

  <mediaobject>
   <alt>Initial Admin UI Screen</alt>
   <imageobject>
    <imagedata fileref="images/admin-ui-main.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <para>
   The information that appears in the initial Admin UI screen depends on how
   you started OpenIDM. For example, if you start OpenIDM with one of the
   <link xlink:role="http://docbook.org/role/xlink/olink" xlink:show="new"
         xlink:href="install-guide#more-samples">OpenIDM Samples</link>, your
   first Resources screen will display connectors and managed objects as
   configured in the selected sample.
  </para>

  <para>
   As shown in the initial screen, the Admin UI supports: <link
   xlink:role="http://docbook.org/xlink/role/olink"
   xlink:href="integrators-guide#chap-resource-conf" xlink:show="new">
   Connecting to External Resources</link> and
   <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
         xlink:href="integrators-guide#chap-users-groups-roles">Managing Users,
   Groups, and Roles</link>.
  </para>

  <para>
   Scroll up and down the Admin UI screen. Review configured
   connectors and managed objects. The screenshots in this section assume that
   you have started OpenIDM with
   <link xlink:href="install-guide#more-sample2b"
   xlink:role="http://docbook.org/xlink/role/olink" xlink:show="new">
   <citetitle>Sample 2b - LDAP Two Way</citetitle></link>.
  </para>

  <note>
   <para>
    While a connector is not a resource, it provides a connection to remote
    resources such as LDAP data stores, XML files, and other databases.
   </para>
  </note>

  <para>
   Connectors are used to communicate with remote resources, such as a
   database, an identity store, or another organized data store.
  </para>

  <para>
   Once you connect one or more data stores and managed objects, you can
   create a mapping between two resources. You can then configure property
   mapping between those resources, for later synchronization.
  </para>

  <section xml:id="ui-admin-connectors">
   <title>Administering Connectors from the UI</title>

   <para>
    You can include several different connectors in an OpenIDM configuration.
    Select the option to create a new connector. Try some of the different
    connector types in the screen that appears. Observe as the Admin UI changes
    the configuration options to match the requirements of the connector type.
   </para>

   <para>
    Every connector serves as a conduit to an external data store.
   </para>

   <mediaobject>
    <alt>Add Connector Admin UI Screen</alt>
    <imageobject>
     <imagedata fileref="images/admin-ui-con-types.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    If you are not sure what to enter in a specific Add Connector text box,
    review the list of <link xlink:show="new"
    xlink:role="http://docbook.org/xlink/role/olink"
    xlink:href="integrators-guide#connectors-with-openidm"><citetitle>Connectors
    Supported With OpenIDM</citetitle></link>. You should be able to find
    guidance and or examples on how each supported connector is configured.
   </para>

   <para>
    For additional guidance, review sample connector files in the
    <filename>samples/provisioners/</filename> subdirectory.
   </para>

   <para>
    Once you fill in all required text boxes, the Admin UI allows you
    to validate the connector configuration.
   </para>

  </section>

  <section xml:id="ui-admin-managedobjects">
   <title>Administering Managed Objects from the UI</title>

   <para>
    You can set up Managed Objects in a fashion similar to the way you set up
    connectors. Typically, OpenIDM uses managed objects as defined in
    <link xlink:role="http://docbook.org/xlink/role/olink" xlink:show="new"
          xlink:href="integrators-guide#chap-users-groups-roles">
     <citetitle>Managing Users, Groups, and Roles</citetitle>.</link>
   </para>

   <para>
    To set up a new Managed Object, navigate to the URL for the Admin UI,
    <literal>https://localhost:8443/admin</literal>.
   </para>

   <para>
    You can set up Managed Objects for any item that can be collected in a
    data set. For example, with the right schema, you can set up any device
    associated with the Internet of Things (IoT).
   </para>

   <para>
    To access details of a Managed Object, navigate to the Resources screen.
    Select the Edit icon associated with the desired Managed Object, such as
    user, group, role, part, or something else.
   </para>

   <mediaobject>
    <alt>Managed Object Admin UI Screen</alt>
    <imageobject>
     <imagedata fileref="images/admin-ui-managed.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <section xml:id="ui-admin-mo-schema">
    <title>Managed Object Schema</title>

    <para>
     When you set up a Managed Object, you should set up associated schema. When
     you Add or Edit a Managed Object, scroll down the window to the Schema
     section, where you can add properties and fields.
    </para>

    <mediaobject>
     <alt>Managed Object Schema UI Screen</alt>
     <imageobject>
      <imagedata fileref="images/admin-schema-title.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     Start with the <literal>Object Title</literal> and
     <literal>Object Description</literal>. The <literal>Object Title</literal>
     is a "human-readable" version of the name of the Managed Object. The
     <literal>Object Description</literal> allows you to elaborate on the
     Managed Object.
    </para>

    <mediaobject>
     <alt>Managed Object Schema Properties</alt>
     <imageobject>
      <imagedata fileref="images/admin-schema-prop.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     In the screen shown here, the administrator has added the following
     properties for the device: <literal>deviceName</literal>,
     <literal>deviceBrand</literal>, <literal>deviceMarket</literal>,
     <literal>deviceManufacture</literal>, and <literal>deviceRetail</literal>.
    </para>

    <para>
     Now you can add the properties of your choice. When you enter a Property
     Name, OpenIDM substitutes that name in the left-hand column.
    </para>

    <para>
     Each property typically includes several fields as follows:
    </para>

   <itemizedlist>
    <listitem>
     <para><literal>Property Name</literal></para>
     <para>Name of the property</para>
    </listitem>
    <listitem>
     <para><literal>Readable Title</literal></para>
     <para>Name of the property, in human-readable language</para>
    </listitem>
    <listitem>
     <para><literal>Description</literal></para>
     <para>Description of the property</para>
    </listitem>
    <listitem>
     <para><literal>Viewable</literal></para>
     <para>Determines whether this property is viewable in the
      Data Management UI, in the profile for the Managed Object. May be
      true or false.</para>
    </listitem>
    <listitem>
     <para><literal>Searchable</literal></para>
     <para>Determines whether this property is searchable from the
     OpenIDM repository. A searchable property should be visible within
     the Managed Object data grid in the Data Management UI. May be true
     or false.</para>
    </listitem>
    <listitem>
     <para><literal>Required</literal></para>
     <para>Specifies whether or not this property is required for the
      OpenIDM repository. May be true or false.</para>
    </listitem>
    <listitem>
     <para><literal>Type</literal></para>
     <para>Type of property; could be <literal>boolean</literal>,
      <literal>integer</literal>, <literal>null</literal>,
      <literal>number</literal>, <literal>object</literal>,
      <literal>string</literal>, or <literal>Resource Collection</literal>.
     </para>
    </listitem>
   </itemizedlist>

   <para>
    After you create a new Managed Object, you can review and manage associated
    information in the Data Management UI. For more information, see
    <xref linkend="ui-managing-users" />.
   </para>

   </section>

  </section>

  <section xml:id="admin-ui-resource-mapping">
   <title>Configuring a Resource Mapping from the UI</title>

   <para>
    You may have multiple connectors and managed objects. You can configure a
    mapping between any two of these resources. Connectors represent an external
    data store, as specified in the following section:
    <link xlink:role="http://docbook.org/xlink/role/olink"
    xlink:show="new" xlink:href="integrators-guide#openicf-provisioner-conf">
    <citetitle>Connectors Supported with OpenIDM</citetitle></link>. In
    contrast, managed objects represents a data store internal to OpenIDM.
   </para>

   <para>
    Resource mapping requires a source and a target. Generally, each resource
    includes properties such as username, address, surname, and title.
    Resource mapping can go beyond user information to other types of data.
   </para>

   <para>
    Once you create a mapping, you can identify properties that you wish to
    control in the target. With this part of the Admin UI, you can configure
    how OpenIDM uses matching properties in the source.
   </para>

   <para>
    The following screenshot illustrates a property mapping between two
    resources. Every resource includes identifiers for each attribute. For
    example, different resources may use one of the following identifiers for
    usernames: un, uid, user, sAMAccountName, and account. For more information
    on property mappings, see the following section on the
    <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
          xlink:href="integrators-guide#synchronization-mappings-file">
     <citetitle>Synchronization Mappings File</citetitle></link>.
   </para>

   <mediaobject>
    <alt>Admin UI - Property Mapping</alt>
    <imageobject>
     <imagedata fileref="images/admin-ui-map-sync.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    The bold black line is used solely by the UI to determine what data is
    shown from these data stores. It does not affect reconciliation. In the
    Admin UI, you can change the location of the line, or move a desired
    property above or below the line.
   </para>

  </section>

  <section xml:id="admin-ui-sync">
   <title>Configuring Reconciliation from the UI</title>

   <para>
    Reconciliation changes data on a target system to match the corresponding
    data on a source system. You can customize how OpenIDM performs
    reconciliation in several ways.
   </para>

   <section xml:id="admin-ui-correlation">
    <title>Correlation Options</title>

    <para>
     OpenIDM can match existing records on the target system to records
     on the source system. This matching is known as
     <emphasis>correlation</emphasis>. For more information about correlation,
     see the section on <link xlink:href="integrators-guide#correlation"
     xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink">
     <citetitle>Correlating Existing Target Objects</citetitle></link>.
    </para>

    <para>
     Before you activate reconciliation, you can configure various correlation
     options, including reconciliation query filters, individual record
     validation, association rules, and data association management.
    </para>         <!-- I don't think these are all correlation options -->

    <para>
     By default, all entries on a source and target system are considered
     candidates for reconciliation. Reconciliation query filters enable you to
     restrict reconciliation operations to specific entries by defining explicit
     queries that are run on the source or on the target. For more information,
     see the section on
     <link xlink:show="new" xlink:href="integrators-guide#recon-by-query"
     xlink:role="http://docbook.org/xlink/role/olink">
     <citetitle>Restricting Reconciliation by Using Queries</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Reconciliation Query Filters</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-recon-query.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     By default, OpenIDM synchronizes all objects that match those defined in
     the connector configuration for the resource. You can filter what is
     considered a valid source or valid target for synchronization by using
     individual record validation scripts. For more information, see the <link
     xlink:show="new" xlink:href="integrators-guide#filtering-source-and-target"
     xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Filtering
     Synchronization Objects By Using Scripts</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Individual Record Validation</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-recon-validation.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     If desired, you can set up
     <link xlink:role="http://docbook.org/xlink/role/olink"
     xlink:href="integrators-guide#correlation" xlink:show="new">
     <citetitle>Correlation Queries</citetitle></link>, with an expression
     builder or with a JavaScript or Groovy-based script.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Correlation Queries</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-corr.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     When a reconciliation operation finds a matching target entry, the process
     creates a link between the source and the target entries. This is also known
     as a Data Association. Data associations serve two purposes - they speed up
     future reconciliation operations, and they serve as a record of the
     relationship between a source and a target entry.
    </para>

    <para>
     The association rules that are configured in the previous section enable
     automatic linking of source and target objects, in accordance with a set of
     defined criteria. These rules might not always link the correct target
     objects to the corresponding source objects. In this case, the Data
     Association Management panel enables you to manipulate links between
     individual source and target objects, manually. You need to have run at
     least one reconciliation for any data to appear here. When a reconciliation
     has been run, select the source object that has been incorrectly mapped and
     select Change Source to Target Association, to specify the correct target
     object that should be linked to that source object.
    </para>
    <para>
     To limit the list of records displayed here, select the synchronization
     situation from the View list. For more information on the situations in
     this list, see <link xlink:show="new"
     xlink:href="integrators-guide#sync-situations"
     xlink:role="http://docboook.org/xlink/role/olink">
     <citetitle>Synchronization Situations</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Data Association Management</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-data-assoc.png" format="PNG" />
     </imageobject>
    </mediaobject>

   </section>

   <section xml:id="admin-ui-recon">
    <title>Reconciliation Options</title>

    <para>
     Before activating reconciliation, you may choose to configure situational
     policies, situational event scripts, and reconciliation scripts.
    </para>

    <para>
     You may want to configure situational policies. By default, the policies
     associated with mappings are set to "read-only". As such, OpenIDM does not
     change anything on the target system, unless you make changes to
     situational policies.
    </para>

    <para>
     With situational policies, you can define actions relevant for situations
     shown in the screenshot below. For a full list of available
     policies, see the following section:
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
     xlink:href="integrators-guide#handling-sync"><citetitle>Synchronization
      Situations and Actions</citetitle></link>.
    </para>

    <para>
     To access the following screen, select the Mapping of your choice and
     select edit. In the sub-tabs that appear, select Reconciliation.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, User-Defined Situational Policies</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-situ-policy.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     You can configure situational event scripts. Each of the script events
     shown <literal>onCreate</literal>, <literal>onDelete</literal>,
     <literal>onLink</literal>, <literal>onUnlink</literal>, and
     <literal>onUpdate</literal>, can help you with
     <link xlink:href="integrators-guide#constructing-attributes"
           xlink:role="http://docbook.org/xlink/role/olink" xlink:show="new">
      <citetitle>Constructing and Manipulating Attributes</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Situational Event Scripts</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-situ-event.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     You can configure scripts that are triggered on reconciliation, as part of
     the <link xlink:href="integrators-guide#advanced-dataflow"
     xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink">
     <citetitle>Advanced Dataflow Configuration</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Reconciliation Script</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-recon-script.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     You can choose to test the overall process with a single record
     reconciliation. In other words, you need not test these policies and
     scripts against the entire data set. For example, you can
     <link xlink:href="integrators-guide#recon-by-id" xlink:show="new"
           xlink:role="http://docbook.org/xlink/role/olink">
      <citetitle>Restrict Reconciliation to a Specific ID</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Single Record Reconciliation</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-single.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     Finally, you should set up a schedule, as described in
     the following section: <link xlink:role="http://docbook.org/xlink/role/olink"
     xlink:show="new" xlink:href="integrators-guide#configuring-sync-schedule">
     <citetitle>Configuring Scheduled Synchronization</citetitle></link>.
    </para>

    <mediaobject>
     <alt>Admin UI Screen, Synchronization</alt>
     <imageobject>
      <imagedata fileref="images/admin-ui-sync.png" format="PNG" />
     </imageobject>
    </mediaobject>

    <para>
     You can also configure LiveSync, which captures the changes that happen on
     a remote system, and then pushes those changes to OpenIDM.
    </para>

    <para>
     For more information on Reconciliation and LiveSync, see the section that
     explains: <link xlink:href="integrators-guide#sync-types" xlink:show="new"
                     xlink:role='http://docbook.org/xlink/role/olink'><citetitle>Types of
     Synchronization</citetitle></link>.
    </para>

    <para>
     While Reconciliation and LiveSync are two different concepts, you can
     manage both with the embedded Quartz scheduler. For more information, see
     the following section:
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#chap-scheduler-conf">
      <citetitle>Scheduling Tasks and Events</citetitle></link>.
    </para>

    <para>
     Once you've set up Reconciliation based on configured properties,
     correlation queries, and a synchronization schedule, you can start the
     synchronization process. Try it out! You'll see the results in the target
     data store.
    </para>

    <para>
     Once you have taken the steps required to configure OpenIDM through the
     Admin UI, you can start the synchronization process from a source to a
     target. Once a synchronization is complete, you can review the results in
     this window.
    </para>

   </section>

  </section>

  <section xml:id="admin-ui-auth">
   <title>Configuring Authentication Modules from the UI</title>

   <para>
    You can also configure authentication modules from the Admin UI. To access
    those modules, click Settings.
   </para>

   <para>
    The page shown here displays several available modules, based on the
    ForgeRock Common Authentication Framework. For more information on each
    module, see the following section:
    <link xlink:href="integrators-guide#supported-auth-modules"
          xlink:show="new" xlink:role="http://forgerock.org/xlink/role/olink">
     <citetitle>Supported Authentication Modules</citetitle>
    </link>.
   </para>

   <mediaobject>
    <alt>Admin UI Screen, Authentication Settings</alt>
    <imageobject>
     <imagedata fileref="images/admin-ui-auth.png" format="PNG" />
    </imageobject>
   </mediaobject>

  </section>

 </section>

 <section xml:id="ui-overview">
  <title>Overview of the Data Management UI</title>
  <para>
   For all users, the Data Management UI includes a Dashboard tab, which
   lists any tasks assigned to the user who as logged in, processes available
   to be invoked, and any notifications for that user.
  </para>
  <para>
   For the administrative user, (role <literal>openidm-admin</literal>), the
   Data Management UI also includes a Users option in the top menu bar,
   which provides an interface for user entries, if you have configured managed
   users in the OpenIDM repository. If you have created additional Managed
   Objects as defined in <xref linkend="ui-admin-managedobjects" />, you can
   also see and select those Managed Objects in the top menu bar.
  </para>
  <para>
   To access the Data Management UI, start OpenIDM, then navigate to
   <link xlink:href="https://localhost:8443/openidmui" />. If you
   have not installed a certificate that is trusted by a certificate authority,
   you are prompted with an "Untrusted Connection" warning the first time you
   log in to the UI.
  </para>
  <para>
   The following image shows the Dashboard tab for the administrative user when
   no tasks, processes, or notifications are available.
  </para>
  <mediaobject>
   <alt>OpenIDM Data Management UI Administrator View - Dashboard</alt>
   <imageobject>
   <imagedata fileref="images/ui-admin-view.png" format="PNG" />
   </imageobject>
</mediaobject>
  <para>
   The following image shows the Users tab, populated with two sample users,
   after a reconciliation associated with Sample 2b.
  </para>
  <mediaobject>
   <alt>OpenIDM Data Management UI Administrator View - Users</alt>
   <imageobject>
   <imagedata fileref="images/ui-users-tab.png" format="PNG" />
   </imageobject>
  </mediaobject>
  <para>
   You can sort the list of users alphabetically, by any of the column values.
   Click on the column title to sort.
  </para>
  <para>
   The <literal>Profile</literal> link enables the user to modify his username
   or password. The <literal>Change Security Data</literal> link, accessed from
   the top of the screen, or from the user's Profile page enables the user to
   change his password and, if this functionality has been enabled, to select a
   new security question.
  </para>
  <para>
   Password changes are subject to the default password policy, as shown in the
   following password update screen.
  </para>
  <mediaobject>
   <alt>OpenIDM UI - Password Change</alt>
   <imageobject>
   <imagedata fileref="images/ui-password-change.png" format="PNG" />
   </imageobject>
  </mediaobject>
  <para>
   For a regular user (role <literal>openidm-authorized</literal>), the Users
   tab is not displayed. By default, regular users cannot manage user accounts,
   except for certain aspects of their own accounts.
  </para>

 <section xml:id="ui-configuring">
  <title>Configuring the Data Management UI</title>
    
  <para>
   The following sections outline the configurable aspects of the Data
   Management UI.
  </para>
  
  <section xml:id="ui-self-registration">
   <title>Enabling Self-Registration</title>
  
   <para>
    Self-registration (the ability for new users to create their own accounts)
    is disabled by default. To enable self-registration, set
    <literal>"selfRegistration"</literal> to <literal>true</literal> in the UI
    configuration file (<filename>conf/ui-configuration.json</filename>).
   </para>

    <programlisting language="javascript">
{
    "configuration" : {
        "selfRegistration" : true,
...    
    </programlisting>
    <para>
     When self-registration is enabled, a "Register your account" link is
     provided on the login page. When a user creates an account on the account
     registration page, a managed object is created in the OpenIDM repository.
     The default policies for managed objects are applied during account
     creation.
    </para>
    <mediaobject>
     <alt>OpenIDM UI - Self Registration</alt>
     <imageobject>
     <imagedata fileref="images/ui-register-account.png" format="PNG" />
     </imageobject>
    </mediaobject>
    <para>
     User objects created using self-registration automatically have the role
     <literal>openidm-authorized</literal>.
    </para>
   </section>
  
  <section xml:id="ui-security-questions">
   <title>Configuring Security Questions</title>
   <para>
    In the event that a user forgets his password, a password reset function
    enables registered users to reset their own passwords. To guard against
    unauthorized access, you can specify that users be prompted with one or
    more security questions when they request a password reset.
   </para>
   <para>
    Security questions are disabled by default. To enable them, set
    <literal>"securityQuestions"</literal> to <literal>true</literal> in the UI
    configuration file (<filename>conf/ui-configuration.json</filename>).
   </para>
   <programlisting language="javascript">
{
    "configuration" : {
        "securityQuestions" : true,
...    
   </programlisting>
   <para>
    A default set of questions is provided, but you can add to these, or
    overwrite them. Specify the list of questions to be asked in the
    <filename>conf/ui-secquestions.json</filename> file.
   </para>
   <para>
    Refresh your browser after this configuration change for the change to be
    picked up by the UI.
   </para>
   <para>
    When security questions are enabled, the following panel is included on the
    self registration page.
   </para>
   <mediaobject>
    <alt>OpenIDM Data Management UI - Security Questions</alt>
    <imageobject>
    <imagedata fileref="images/ui-security-questions.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    In addition, a "Reset your password" link is provided on the login page.
    When a user attempts to reset her password, she is prompted for the
    response to the security question that she set up during registration.
   </para>
   <mediaobject>
    <alt>OpenIDM Data Management UI - Reset Password</alt>
    <imageobject>
    <imagedata fileref="images/ui-reset-password.png" format="PNG" />
    </imageobject>
   </mediaobject>
   <note>
    <para>
     If security questions are enabled <emphasis>after</emphasis> a specific
     user has registered, that particular user will be unable to use the
     password reset functionality.
    </para>
   </note>
  </section>
  </section>

  <section xml:id="ui-minimum-length">
   <title>Minimum Length Security Answers</title>

   <para>
    The password, passphrase, and security answer are all associated with
    some minimum length. To change that minimum, edit the
    <filename>conf/policy.json</filename> file.
    Navigate to the appropriate section. Set the <literal>minLength</literal>
    option to the desired number.
   </para>

   <para>
    For example, the following excerpt from the
    <filename>conf/policy.json</filename> file shows a default
    <literal>minLength</literal> of 16 associated with the security answer.
   </para>

   <programlisting language="javascript">
{
    "policyId" : "minimum-length",
    "params" : {
        "minLength" : 16
    }
},</programlisting>

  </section>

  <section xml:id="ui-site-identification">
   <title>Enabling Site Identification</title>
   <para>
    To ensure that users are entering their details onto the correct site, you
    can enable site identification. Site identification provides a preventative
    measure against phishing.
   </para>
   <para>
    With site identification enabled, a user is presented with a range of images
    from which he can select when he registers his account, and prompted to
    specify his own <emphasis>site phrase</emphasis>. The selected site image
    and phrase are displayed on login, to confirm that the user is logging in to
    the legitimate site.
   </para>
   <para>
    To enable site identification, set <literal>"siteIdentification"</literal>
    to <literal>true</literal> in the UI configuration file
    (<filename>conf/ui-configuration.json</filename>).
   </para>
   <programlisting language="javascript">
{
    "configuration" : {
        "siteIdentification" : true,
...    
    </programlisting>
    <para>
     Refresh your browser after this configuration change for the change to be
     picked up by the UI.
    </para>
   <para>
    When site identification is enabled, the following panel is included on the
    self registration page.
   </para>
   <mediaobject>
    <alt>OpenIDM UI - Site Identification</alt>
    <imageobject>
    <imagedata fileref="images/ui-site-identification.png" format="PNG" />
    </imageobject>
   </mediaobject>
   <para>
    A default list of four images is presented for site identification. The
    images are defined in the <literal>siteImages</literal> property in the
   <filename>conf/ui-configuration.json</filename> file:
   </para>
   <programlisting language="javascript">
"siteImages" : [
"images/passphrase/mail.png",
"images/passphrase/user.png",
"images/passphrase/report.png",
"images/passphrase/twitter.png"
],
...    
   </programlisting>
   <para>
    You can change the default images, and include additional images, by
    placing image files in the <filename>ui/extension/images</filename> folder
    and modifying the <literal>siteImages</literal> property in the
    <filename>ui-configuration.json</filename> file to point to the new images.
    Refresh your browser for the change to take effect.
   </para>
   <para>
    The following example assumes an image file named
    <filename>my-new-image.jpg</filename>, located in
    <filename>ui/extension/images</filename>.
   </para>
   <programlisting language="javascript">
"siteImages" : [
"images/passphrase/mail.png",
"images/passphrase/user.png",
"images/passphrase/report.png",
"images/passphrase/twitter.png",
"images/my-new-image.jpg"
],
...
   </programlisting>
   <para>
    Note that the default image files are located in
    <filename>ui/default/enduser/public/images/passphrase</filename>.
   </para>
  </section>
  
  <section xml:id="ui-country-list">
   <title>Configuring the Country List</title>
   <para>
    The default user profile includes the ability to select the user's country
    and state or province. To specify the countries, and the associated states
    or provinces, that appear in these drop down lists,  edit the
    <filename>conf/ui-countries.json</filename> file. For example, to add 
    Norway to the list of countries, you would add the following to the 
    <filename>conf/ui-countries.json</filename> file:
   </para>
   <programlisting language="javascript">
{
    "key" : "norway",
    "value" : "Norway",
    "states" : [
        {
            "key" : "akershus",
            "value" : "Akershus"
        },
        {
            "key" : "aust-agder",
            "value" : "Aust-Agder"
        },
        {
            "key" : "buskerud",
            "value" : "Buskerud"
        },
...
   </programlisting>
   <para>
    Refresh your browser after this configuration change for the change to be
    picked up by the UI.
   </para>
  </section>
 </section>

 <section xml:id="ui-managing-users">
  <title>Managing Data Accounts With the Data Management UI</title>

  <para>
   Only administrative users (with the role <literal>openidm-admin</literal>)
   can add, modify, and delete data accounts. Regular users can modify certain
   aspects of their own accounts.
  </para>

  <para>
   With the following procedures, you can add, update, and deactivate accounts
   for Managed Objects such as users, or even something else.
  </para>

  <para>
   The Managed Object does not have to be a user. It can even be something
   different like an IoT device. The basic process for adding, modifying,
   deactivating, and deleting data accounts is the same. However, the details
   may vary; for example, many IoT devices do not have telephone numbers.
  </para>

  <procedure xml:id="add-user-account">
   <title>To Add a User Account</title>
   <step>
    <para>
     Log into the Data Management UI at
     <literal>https://localhost:8443/openidmui</literal> as an administrative
     user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click Add User.
    </para>
   </step>
   <step>
    <para>
     Complete the fields on the Create new account page.
    </para>
    <para>
     Most of these fields are self-explanatory. Be aware that the user interface
     is subject to policy validation, as described in <link
     xlink:href="integrators-guide#chap-policies" 
     xlink:role="http://docbook.org/xlink/role/olink">
     <citetitle>Using Policies to Validate Data</citetitle></link>. So, for
     example, the Email address must be of valid email address format, and the
     Password must comply with the password validation settings that are
     indicated in the panel to the right.
    </para>
    <para>
     The Admin Role field reflects the roles that are defined in the
     <filename>ui-configuration.json</filename> file, as well as any managed
     roles that have been added. By default, the roles are mapped as follows:
    </para>
    <programlisting language="javascript">
"roles" : {
    "openidm-admin" : "Administrator",
    "openidm-authorized" : "User",
    "openidm-tasks-manager" : "Tasks Manager"
},  </programlisting>
    <para>
     A user can be assigned more than one role. Only users with the
     <literal>tasks-manager</literal> role can assign tasks to any candidate
     user for that task.
    </para>
   </step>
  </procedure>

  <mediaobject>
   <alt>OpenIDM Data Management UI - Create User Account</alt>
   <imageobject>
    <imagedata fileref="images/ui-create-account.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <para>
   In a similar fashion, you can create accounts for other managed objects. If
   you followed the instructions discussed in section
   <xref linkend="ui-admin-mo-schema" />, you should now see a Wearable Device
   managed object in the Data Management UI.
  </para>

  <mediaobject>
   <alt>OpenIDM Data Management UI - With Another Managed Object</alt>
   <imageobject>
    <imagedata fileref="images/ui-wearable-device-mo.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <procedure xml:id="ui-add-wearable-account">
   <title>To Add an Entry for a Non-User Managed Object</title>

   <para>
    This procedure applies if you created a Managed Object for something other
    than users. This procedure assumes that you have set up a Managed Object
    with an object title of <literal>Wearable Device</literal>.
   </para>

   <para>
    The first time you create an entry for a new Managed Object, you will see a
    relatively blank screen:
   </para>

   <mediaobject>
    <alt>OpenIDM Data Management UI - New Managed Object</alt>
    <imageobject>
     <imagedata fileref="images/ui-initial-mo.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    The items that you can add to the new Managed Object depends on the
    associated properties, as discussed in <xref linkend="ui-admin-mo-schema" />.
    This procedure assumes that your new Managed Object is a wearable device.
   </para>

   <step>
    <para>
     Select Add. As shown in the screen, the button includes the
     <literal>Readable Title</literal> of the device.
    </para>
   </step>
   <step>
    <para>
     You should see entries for those property fields configured for the
     Managed Object. The information tooltips that appear are set to the
     <literal>Description</literal> of the Managed Object or the
     the <literal>Property</literal>.
    </para>
    <mediaobject>
     <alt>OpenIDM Data Management UI - Required Properties</alt>
     <imageobject>
      <imagedata fileref="images/ui-mo-allprop.png" format="PNG" />
     </imageobject>
    </mediaobject>
   </step>
   <step>
    <para>
     After you save the properties for the new Managed Object entry, OpenIDM
     saves those entries in its internal repository. You can continue adding
     entries as needed.
    </para>
    <mediaobject>
     <alt>OpenIDM Data Management UI - All Properties</alt>
     <imageobject>
      <imagedata fileref="images/ui-mo-wearable.png" format="PNG" />
     </imageobject>
    </mediaobject>
   </step>
   <step>
    <para>
     You can continue adding new elements to the Managed Object,
     or reconcile that Managed Object with another data store.
    </para>
   </step>

  </procedure>

  <para>
   In the following procedures, you can see how to update, deactivate, and
   delete user accounts, as well as how to view that account in different user
   resources. You can follow essentially the same procedures for other Managed
   Objects such as IoT devices.
  </para>

  <procedure xml:id="ui-update-account">
   <title>To Update a User Account</title>  
   <step>
    <para>
     Log into the Data Management UI at
     <literal>https://localhost:8443/openidmui</literal> as an administrative
     user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user that you want to update.
    </para>
   </step>
   <step>
    <para>
     On the profile page for the user, modify the fields you want to change and
     click Update.
    </para>
    <para>
     The user account is updated in the OpenIDM repository.
    </para>
   </step>
  </procedure>
 
  <procedure xml:id="deactivate-account">
   <title>To Deactivate a User Account</title>
   <step>
    <para>
     Follow steps 1-3 in <xref linkend="ui-update-account" />.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, select Inactive from the Account status list.
    </para>
   </step>
   <step>
    <para>
     Click Update.
    </para>
    <para>
     The user account is deactivated and the user can no longer log in to the
     system.
    </para>
    <para>
     Inactive users are indicated with a X icon in the Status column of the
     Users page. The following image shows that Steven Carter's account has been
     deactivated.
    </para>
   </step>  
  </procedure>

  <mediaobject>
   <alt>OpenIDM UI - Deactivate User Account</alt>
   <imageobject>
    <imagedata fileref="images/ui-deactivate-account.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <procedure xml:id="reset-user-password">
   <title>To Reset a User's Password</title>
   <para>
    Users can change their own passwords by following the Change Security Data
    link in their profiles. This process requires that users know their existing
    passwords.
   </para>
   <para>
    In a situation where a user forgets his password, an administrator can reset
    the password of that user without knowing the user's existing password.
   </para>
   <step>
    <para>
     Follow steps 1-3 in <xref linkend="ui-update-account" />.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, click Change password.
    </para>
   </step>
   <step>
    <para>
     Enter a new password that conforms to the password policy and click Update.
    </para>
    <para>
     The user password is updated in the repository.
    </para>
   </step>  
  </procedure>
 
  <procedure xml:id="delete-user-account">
   <title>To Delete a User Account</title>  
   <step>
    <para>
     Log into the Data Management UI at
     <literal>https://localhost:8443/openidmui</literal> as an administrative
     user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user that you want to delete.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, click Delete.
    </para>
   </step>
   <step>
    <para>
     Click OK to confirm the deletion.
    </para>
    <para>
     The user is deleted from the internal repository.
    </para>
   </step>
  </procedure>

  <procedure xml:id="user-linked-view">
   <title>To View an Account in External Resources</title>
   <para>
    The Data Management UI displays the details of the account in the
    OpenIDM repository (managed/user). When a mapping has been configured
    between the repository and one or more external resources, you can view what
    that user account looks like in any of the systems to which it is linked.
    Note that this view is read-only - you cannot update a user record in a
    linked system from within the Data Management UI.
   </para>
   <para>
    By default, <emphasis>implicit synchronization</emphasis> is enabled for
    mappings <emphasis>from</emphasis> the <literal>managed/user</literal>
    repository <emphasis>to</emphasis> any external resource. This means that
    when you update a managed object, any mappings defined in the
    <filename>sync.json</filename> file that have the managed object as the
    source are automatically executed to update the target system. You can see
    these changes in the Linked Systems section of a user's profile.
   </para>
   <para>
    To view a user's linked accounts:
   </para>
   <step>
    <para>
     Log into the Data Management UI at
     <literal>https://localhost:8443/openidmui</literal> as an administrative
     user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user whose accounts you want to view.
    </para>
   </step>
   <step>
    <para>
     At the bottom of the user profile, the Linked Systems panel indicates the
     external resource or resources to which this user entry is mapped.
    </para>
   </step>
   <step>
    <para>
     Select the resource in which you want to view the account, from the Linked
     Resource list.
    </para>
    <para>
     The user record in the linked resource is displayed.
    </para>
    <para>
     The following image shows the user account for a user <literal>fdoe</literal>,
     as it exists in the LDAP directory to which the managed user repository is
     mapped.
    </para>
     <mediaobject>
      <alt>New user record for fdoe</alt>
      <imageobject>
       <imagedata fileref="images/linked-view-fdoe.png" format="PNG" />
      </imageobject>
     </mediaobject>
   </step>
  </procedure>
 </section>

 <section xml:id="ui-managing-workflows">
  <title>Managing Workflows From the Data Management UI</title>
  <para>
   The Data Management UI is integrated with the embedded Activiti worfklow
   engine, enabling users to interact with workflows. Available workflows are
   displayed under the Processes item on the Dashboard. In order for a workflow
   to be displayed here, the workflow definition file must be present in the
   <filename>openidm/workflow</filename> directory.
  </para>
  <para>
   A sample workflow integration with the Data Management UI is provided in
   <filename>openidm/samples/workflow</filename>, and documented in <link
   xlink:href="integrators-guide#example-provisioning-workflow"
   xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Sample Workflow -
   Provisioning User Accounts</citetitle></link>. Follow the steps in that
   sample for an understanding of how the workflow integration works.
  </para>
  <para>
   Access to workflows is based on OpenIDM roles, and is configured in the file
   <filename>conf/process-access.json</filename>. By default all users with the
   role <literal>openidm-authorized</literal> or
   <literal>openidm-admin</literal> can invoke any available workflow. The
   default <filename>process-access.json</filename> file is as follows:
  </para>
  <programlisting language="javascript">
{
    "workflowAccess" : [
        {
            "propertiesCheck" : {
                "property" : "_id",
                "matches" : ".*",
                "requiresRole" : "openidm-authorized"
            }
        },
        {
            "propertiesCheck" : {
                "property" : "_id",
                "matches" : ".*",
                "requiresRole" : "openidm-admin"
            }
        }
    ]
}  
  </programlisting>
  <variablelist>
   <varlistentry>
    <term><literal>"property"</literal></term>
    <listitem>
     <para>
      Specifies the property used to identify the process definition. By default,
      process definitions are identified by their <literal>_id</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>"matches"</literal></term>
    <listitem>
     <para>
      A regular expression match is performed on the process definitions,
      according to the specified property. The default
      (<literal>"matches" : ".*"</literal>) implies that all process definition
      IDs match.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>"requiresRole"</literal></term>
    <listitem>
     <para>
      Specifies the OpenIDM role that is required for users to have access to
      the matched process definition IDs. In the default file, users with the
      role <literal>openidm-authorized</literal> or
      <literal>openidm-admin</literal> have access.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   To extend the process action definition file, identify the processes to which
   users should have access, and specify the qualifying user roles. For example,
   if you wanted to restrict access to a process definition whose ID was
   <literal>567</literal>, to users with the role <literal>ldap</literal> you
   would add the following to the <filename>process-access.json</filename> file:
  </para>
  <programlisting>
{
    "propertiesCheck" : {
        "property" : "_id",
        "matches" : "567",
        "requiresRole" : "ldap"
    }
}
  </programlisting>
 </section>

 <section xml:id="ui-customizing">
  <title>Changing the UI Theme</title>
  <para>
   You can customize the theme of the user interface with your own branding. One
   way to adjust the UI theme, is to edit the properties in the UI theme
   configuration file
   (<filename>/path/to/openidm/conf/ui-themeconfig.json</filename>). This file
   stores detailed color values, background image paths, and a number of other
   common styling options. Because the UI theme configuration file is part of
   the configuration store, it is shared by all nodes in a cluster. Changes made
   to this file do not have to be replicated manually across nodes.
  </para>
  <para>
   To change theme elements that are not included in the UI theme configuration
   file, you can create a custom theme in the
   <filename>openidm/ui/extension</filename> directory. By default the user
   interface reads the stylesheets and images from the
   <filename>openidm/ui/default</filename> directory. Do not modify the files in
   this default directory as there is no guarantee that your changes will not be
   overwritten in the next OpenIDM release. Modifications made in the
   <filename>openidm/ui/extension</filename> directory can be maintained across
   product upgrades. The UI searches the <literal>extension</literal> directory
   first and applies any styles or images located in this directory. Note that
   files added to the <literal>extension</literal> directory must be manually
   copied between every node in a cluster.
  </para>
  <para>
   If you want to update the view logic of the UI, you cannot simply add files
   to the extensions folder. It is assumed that if your deployment requires that
   level of control of the user interface, you are no longer going to want to be
   automatically upgraded with subsequent releases. As such, you need to take on
   the task of maintaining a fork of the UI.
  </para>

  <section xml:id="ui-style">
   <title>Changing the Default Stylesheet</title>
   <para>
    Most changes to the UI stylesheets can be made in the UI theme configuration
    file (<filename>conf/ui-themeconfig.json</filename>).
   </para>
   <para>
    If you make the following change to that file, that changes the background
    color of the UI to dark grey.
   </para>
   <screen><userinput>$ grep "background-color" /path/to/openidm/conf/ui-themeconfig.json</userinput>
<computeroutput>"background-color" : "#ababab",</computeroutput>
   </screen>
     <para>
      Refresh your browser window for the change to appear.
     </para>
   <para>
    The default stylesheets are located in the
    <filename>openidm/ui/default/enduser/public/css</filename> directory. To
    customize the stylesheets beyond the properties available in the UI theme
    configuration file, copy the default stylesheets to
    <filename>openidm/ui/extension/css</filename>, and edit them according to
    your requirements.
   </para>
  </section>

  <section xml:id="ui-logo">
   <title>Changing the Default Logo</title>
   <para>
    The default logo is located in the
    <filename>openidm/ui/default/enduser/public/images</filename> directory.
    Any file named <filename>logo.png</filename>, added to the directory
    <filename>openidm/ui/extension/images</filename>, will replace the default
    logo when the browser is refreshed.
   </para>
   <para>
    To specify a different file name, or to control the size, and other
    properties of the image file that is used for the logo, adjust the
    <literal>logo</literal> property in the UI theme configuration file
    (<filename>conf/themeconfig.json</filename>).
   </para>
   <para>
    The following change to the UI theme configuration file points to an image
    file named <filename>example-logo.png</filename>, in the
    <filename>openidm/ui/extension/images</filename> directory.
   </para>
   <programlisting language="javascript">...
   "logo" : {
       "src" : "images/example-logo.png",
       "title" : "Example.com",
       "alt" : "Example.com",
       "height" : "80",
       "width" : "120"
   },
...</programlisting>
   <para>
    Refresh your browser window for the new logo to appear.
   </para>
  </section>

  <section xml:id="ui-locale">
   <title>Changing the Language of the UI</title>
   <para>
    Currently, the UI is provided only in US English. You can translate the UI
    and specify that your own locale is used. The following example shows how to
    translate the UI into French.
   </para>
   <procedure>
    <step>
     <para>
      Copy the default locale to a new folder in the same location
      (<filename>openidm/ui/default/enduser/public/locales</filename>):
     </para>
     <screen>$ cd /path/to/openidm/ui/default/enduser/public/locales
$ cp -R en/ fr/</screen>
     <para>
      The new locale (<literal>fr</literal>) now contains the default
      <filename>translation.json</filename> file.
     </para>
     <screen><userinput>$ ls fr/</userinput>
<computeroutput>translation.json</computeroutput></screen>
    </step>
    <step>
     <para>
      Translate the values of the properties in the
      <filename>fr/translate.json</filename> file. Do <emphasis>not</emphasis>
      translate the property names. For example:
     </para>
     <programlisting language="javascript">...
"UserMessages" : {
    "changedPassword" : "Mot de passe a été modifié",
    "profileUpdateFailed" : "Problème lors de la mise à jour du profil",
    "profileUpdateSuccessful" : "Profil a été mis à jour",
    "userNameUpdated" : "Nom d'utilisateur a été modifié",
.... </programlisting>
    </step>
    <step>
     <para>
      Change the UI configuration to use the new locale by setting the value of
      the <literal>lang</literal> property in the
      <filename>/path/to/openidm/conf/ui-configuration.json</filename> file, as
      follows:
     </para>
     <screen>"lang" : "fr",</screen>
    </step>
    <step>
     <para>
      Refresh your browser window for the modification to be applied.
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="ui-project-config">
   <title>Creating a Project-Specific UI Theme</title>
   <!--TODO this is not working for me -->
   <para>
    You can create specific UI themes for different projects and then point a
    particular UI instance to use a defined theme on startup. To create a
    complete custom theme, follow these steps:
   </para>
   <procedure>
    <step>
     <para>
      Shut down the OpenIDM instance, if it is running. In the Felix
      administration console, type:
     </para>
     <screen>shutdown
-&gt;</screen>
    </step>
    <step>
     <para>
      Clear the <literal>felix-cache</literal> directory.
     </para>
     <screen>$ rm -rf felix-cache</screen>
    </step>
    <step>
     <para>
      Copy the entire default UI theme to an accessible location. For example:
     </para>
     <screen>$ cd /path/to/openidm/ui
$ cp -r default ../new-project-theme</screen>
    </step>
    <step>
     <para>
      In the copied theme, modify the required elements, as described in the
      previous sections. Note that nothing is copied to the extension folder in
      this case - changes are made in the copied theme.
     </para>
    </step>
    <step>
     <para>
      In the <literal>openidm/conf/boot/boot.properties</literal> file, add the
      following line, specifying the location of the new theme. The path is
      relative to the installation root of the OpenIDM instance.
     </para>
     <screen>openidm.ui.fileinstall.dir=new-project-theme</screen>
    </step>
    <step>
     <para>
      Restart OpenIDM.
     </para>
     <screen>$ cd /path/to/openidm
$ ./startup.sh</screen>
    </step>
    <step>
     <para>
      Relaunch the UI in your browser. The UI is displayed with the new custom
      theme.
     </para>
    </step>
   </procedure>
  </section>
 </section>

 <section xml:id="ui-external-password-reset">
  <title>Using an External System for Password Reset</title>
  <para>
   By default, the password reset mechanism is handled internally, in OpenIDM.
   You can reroute password reset in the event that a user has forgotten his
   password, by specifying an external URL to which password reset requests are
   sent. Note that this URL applies to the password reset link on the login page
   only, not to the security data change facility that is available after a user
   has logged in.
  </para>
  <para>
   To set an external URL to handle password reset, set the
   <literal>passwordResetLink</literal> parameter in the UI configuration file
   (<filename>conf/ui-configuration.json</filename>) file. The following example
   sets the <literal>passwordResetLink</literal> to
   <literal>https://accounts.example.com/account/reset-password</literal>.
  </para>
  <screen>passwordResetLink: "https://accounts.example.com/reset-password"</screen>
  <para>
   The <literal>passwordResetLink</literal> parameter takes either an empty
   string as a value (which indicates that no external link is used) or a full
   URL to the external system that handles password reset requests.
  </para>
  <note>
   <para>
    External password reset and security questions for internal password reset
    are mutually exclusive. Therefore, if you set a value for the
    <literal>passwordResetLink</literal> parameter, users will not be prompted
    with any security questions, regardless of the setting of the
    <literal>securityQuestions</literal> parameter.
   </para>
  </note>
 </section>

 <section xml:id="ui-external-logout">
  <title>Providing a Logout URL to External Applications</title>
  <para>
   By default, a UI session is invalidated when a user clicks on the Log out
   link. In certain situations your external applications might require a
   distinct logout URL to which users can be routed, to terminate their UI
   session.
  </para>
  <para>
   The logout URL is <literal>#logout</literal>, appended to the UI URL, for
   example, <literal>https://localhost:8443/openidmui/index.html#logout/</literal>.
  </para>
  <para>
   The logout URL effectively performs the same action as clicking on the Log
   out link of the UI.
  </para>
 </section>

 <section xml:id="ui-path">
  <title>Changing the UI Path</title>
  <para>
   By default, the UI is registered at a specific URL
   (<literal><replaceable>context-root</replaceable>/openidmui</literal>). To
   override the default URL and specify your own path, edit the
   <filename>openidm/conf/ui.context-enduser.json</filename> file, setting the
   <literal>urlContextRoot</literal> property to the new URL. For example, to
   change the path to
   <literal><replaceable>context-root</replaceable>/exampleui</literal>, edit
   the file as follows:
  </para>
  <screen>"urlContextRoot" : "/exampleui",</screen>
 </section>

 <section xml:id="ui-disabling">
  <title>Disabling the UI</title>
  <para>
   The UI is packaged as a separate bundle that can be disabled in the
   configuration before server startup. To disable the registration of the UI
   servlet, edit the <filename>openidm/conf/ui.context-enduser.json</filename>
   file, setting the <literal>enabled</literal> property to false:
  </para>
  <screen>"enabled" : false,</screen>
 </section>
</chapter>