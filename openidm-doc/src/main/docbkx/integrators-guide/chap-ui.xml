<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2015 ForgeRock AS
  !    
-->
<chapter xml:id='chap-ui'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
 http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>OpenIDM Web-Based User Interfaces</title>
 <para>
  OpenIDM provides a customizable, browser-based user interface. The
  functionality is subdivided into Administration and Self-Service.
 </para>

 <para>
  If you are administering OpenIDM, navigate to the Administrative User
  Interface, also known as the Admin UI. If OpenIDM is installed on the
  local system, you can get to the Admin UI at the following URL:
  <literal>https://localhost:8443/admin</literal>. In the Admin UI, you
  can configure connectors, customize managed objects, set up attribute
  mappings, manage accounts, and more.
 </para>

 <para>
  The Self-Service User Interface, also known as the Self-Service UI,
  provides role-based access to tasks based on BPMN2 workflows, and
  allows users to manage certain aspects of their own accounts,
  including configurable self-service registration. When OpenIDM starts,
  you can access the Self-Service UI at
  <literal>https://localhost:8443/</literal>.
 </para>

 <para>
  The first time you log into either UI as the <literal>openidm-admin</literal>
  administrative user, the default password is <literal>openidm-admin</literal>.
  As that default password is not secure, we recommend that you change that
  password in production. However, you can bypass that window, by clicking the
  X in the upper right corner.
 </para>

 <section xml:id="ui-admin">
 <title>Configuring OpenIDM from the Admin UI</title>

 <para>
  You can set up a basic configuration for OpenIDM with the Administrative User
  Interface (Admin UI).
 </para>

 <para>
  Through the Admin UI, you can connect to resources, configure attribute
  mapping and scheduled reconciliation, and set up and manage objects, such
  as users, groups and devices.
 </para>

 <para>
  To access the initial Admin UI screen, navigate to
  <literal>https://localhost:8443/admin</literal>.
 </para>
        <!--   TODO, para included as a limit; may need to expand the following
        section for more features
 <para>
  We have incorporated descriptions of the Admin UI in appropriate functional
  sections. We include the following links based on the
  <link xlink:show="new"
        xlink:href="http://docs.forgerock.org/en/openidm/3.1.0/integrators-guide/index.html#ui-admin">
   previous version of this document</link>, to help readers who expect
  Admin UI guidance in this section.
 </para>    -->

  <itemizedlist>
   <para>
    The initial Admin UI screens shows active connectors. You should see
    <literal>Configure</literal> and <literal>Manage</literal> menus
    to configure OpenIDM and manage data, including workflows.
   </para>
   <listitem>
    <para><literal>Connectors</literal></para>
    <para>
     You can use the Admin UI to connect to external resources by
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#connector-wiz-adminui">
      <citetitle>Adding New Connectors from the Admin UI</citetitle></link>.
    </para>
   </listitem>
   <listitem>
    <para><literal>Managed Objects</literal></para>
    <para>
     You can use the Admin UI to set up managed objects, including users, groups,
     roles, or even IoT devices by
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#working-with-mo-ui">
      <citetitle>Administering Managed Objects From the UI</citetitle></link>.
    </para>
   </listitem>
   <listitem>
    <para><literal>Synchronization</literal></para>
    <para>
     You can customize the OpenIDM reconciliation process with correlation
     queries and scripts as described in the following section:
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#basic-sync"><citetitle>Configuring
     Basic Synchronization</citetitle></link>.
    </para>
   </listitem>
   <listitem>
    <para><literal>Resource Mapping</literal></para>
    <para>
     You can set up mappings between properties by
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#synchronization-mappings-file">
      <citetitle>Configuring the Synchronization Mapping</citetitle></link>.
    </para>
   </listitem>
   <listitem>
    <para><literal>Authentication Modules</literal></para>
    <para>
     You can configure Authentication Modules as described in the following
     section: <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
                    xlink:href="integrators-guide#supported-auth-session-modules">
     <citetitle>Supported Authentication and Session Modules</citetitle></link>.
    </para>
   </listitem>
  </itemizedlist>

 </section>

 <section xml:id="ui-overview">
  <title>Overview of the Self-Service UI</title>
  <para>
   For all users, the Self-Service UI includes a Dashboard tab, which
   lists any tasks assigned to the user who as logged in, processes available
   to be invoked, and any notifications for that user.
  </para>
  <!-- TODO: add screenshot when the UI is (more) stable -->
  <para>
   To access the Self-Service UI, start OpenIDM, then navigate to
   <link xlink:href="https://localhost:8443/" />. If you
   have not installed a certificate that is trusted by a certificate authority,
   you are prompted with an "Untrusted Connection" warning the first time you
   log in to the UI.
  </para>
  <para>
   The <literal>Profile</literal> link enables the user to modify his username
   or password. The <literal>Change Security Data</literal> link, accessed from
   the <literal>openidm-admin</literal> drop-down menu in the upper-right
   corner of the screen, or from the profile page of a user, enables the user to
   change his password and, if this functionality has been enabled, to select a
   new security question.
  </para>
  <para>
   Password changes are subject to the default password policy. For details, see
   the following section:
   <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
         xlink:href="intergators-guide#enforce-password-policy">
    <citetitle>Enforcing Password Policy</citetitle></link>.
  </para>

 <section xml:id="ui-configuring">
  <title>Configuring the Self-Service UI</title>
    
  <para>
   The following sections outline the configurable aspects of the Self-Service
   UI.
  </para>
  
  <section xml:id="ui-self-registration">
   <title>Enabling Self-Registration</title>
  
   <para>
    Self-registration (the ability for new users to create their own accounts)
    is disabled by default. To enable self-registration, set
    <literal>"selfRegistration"</literal> to <literal>true</literal> in the UI
    configuration file (<filename>conf/ui-configuration.json</filename>).
   </para>

    <programlisting language="javascript">
{
    "configuration" : {
        "selfRegistration" : true,
...    
    </programlisting>
    <para>
     When self-registration is enabled, OpenIDM includes a "Don't have an
     account? Register" link on the <literal>https://localhost:8443/</literal>
     login page. When the account registration page is used to create an account,
     OpenIDM creates a managed object in the OpenIDM repository, and applies
     default policies for managed objects.
    </para>
    <para>
     User objects created using self-registration automatically have the role
     <literal>openidm-authorized</literal>.
    </para>
   </section>
  
  <section xml:id="ui-security-questions">
   <title>Configuring Security Questions</title>
   <para>
    In the event that a user forgets his password, a password reset function
    enables registered users to reset their own passwords. To guard against
    unauthorized access, you can specify that users be prompted with one or
    more security questions when they request a password reset.
   </para>
   <para>
    Security questions are disabled by default. To enable them, set
    <literal>"securityQuestions"</literal> to <literal>true</literal> in the UI
    configuration file (<filename>conf/ui-configuration.json</filename>).
   </para>
   <programlisting language="javascript">
{
    "configuration" : {
        "securityQuestions" : true,
...    
   </programlisting>
   <para>
    A default set of questions is provided, but you can add to these, or
    overwrite them. Specify the list of questions to be asked in the
    <filename>conf/ui-secquestions.json</filename> file.
   </para>
   <para>
    Refresh your browser after this configuration change for the change to be
    picked up by the UI.
   </para>
   <para>
    When security questions are enabled, the following panel is included on the
    self-registration page.
   </para>
   <mediaobject>
    <alt>OpenIDM Self-Service UI - Security Questions</alt>
    <imageobject>
    <imagedata fileref="images/ui-security-questions.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    In addition, a "Reset your password" link is provided on the login page.
    When a user attempts to reset a password, that user is prompted for the
    response to the security question configured during registration.
   </para>
   <note>
    <para>
     If security questions are enabled <emphasis>after</emphasis> a specific
     user has registered, that user will be unable to use the
     password reset functionality.
    </para>
   </note>
  </section>
  </section>

  <section xml:id="ui-minimum-length">
   <title>Minimum Length Security Answers</title>

   <para>
    The password, passphrase, and security answer are all associated with
    some minimum length. To change that minimum, edit the
    <filename>conf/policy.json</filename> file.
    Navigate to the appropriate section. Set the <literal>minLength</literal>
    option to the desired number.
   </para>

   <para>
    For example, the following excerpt from the
    <filename>conf/policy.json</filename> file shows a default
    <literal>minLength</literal> of 16 associated with the security answer.
   </para>

   <programlisting language="javascript">
{
    "policyId" : "minimum-length",
    "params" : {
        "minLength" : 16
    }
},</programlisting>

  </section>

  <section xml:id="ui-site-identification">
   <title>Enabling Site Identification</title>
   <para>
    To ensure that users are entering their details onto the correct site, you
    can enable site identification. Site identification provides a preventative
    measure against phishing.
   </para>
   <para>
    With site identification enabled, a user is presented with a range of images
    from which he can select when he registers his account, and prompted to
    specify his own <emphasis>site phrase</emphasis>. The selected site image
    and phrase are displayed on login, to confirm that the user is logging in to
    the legitimate site.
   </para>
   <para>
    To enable site identification, set <literal>"siteIdentification"</literal>
    to <literal>true</literal> in the UI configuration file
    (<filename>conf/ui-configuration.json</filename>).
   </para>
   <programlisting language="javascript">
{
    "configuration" : {
        "siteIdentification" : true,
...    
    </programlisting>
    <para>
     Refresh your browser after this configuration change for the change to be
     picked up by the UI.
    </para>
   <para>
    A default list of four images is presented for site identification. The
    images are defined in the <literal>siteImages</literal> property in the
   <filename>conf/ui-configuration.json</filename> file:
   </para>
   <programlisting language="javascript">
"siteImages" : [
"images/passphrase/mail.png",
"images/passphrase/user.png",
"images/passphrase/report.png",
"images/passphrase/twitter.png"
],
...    
   </programlisting>
   <para>
    You can change the default images, and include additional images, by
    placing image files in the <filename>ui/extension/images</filename> folder
    and modifying the <literal>siteImages</literal> property in the
    <filename>ui-configuration.json</filename> file to point to the new images.
    Refresh your browser for the change to take effect.
   </para>
   <para>
    The following example assumes an image file named
    <filename>my-new-image.jpg</filename>, located in
    <filename>ui/extension/images</filename>.
   </para>
   <programlisting language="javascript">
"siteImages" : [
"images/passphrase/mail.png",
"images/passphrase/user.png",
"images/passphrase/report.png",
"images/passphrase/twitter.png",
"images/my-new-image.jpg"
],
...
   </programlisting>
   <para>
    Note that the default image files are located in
    <filename>ui/default/selfservice/public/images/passphrase</filename>.
   </para>
  </section>
  
  <section xml:id="ui-country-list">
   <title>Configuring the Country List</title>
   <para>
    The default user profile includes the ability to select the user's country
    and state or province. To specify the countries, and the associated states
    or provinces, that appear in these drop down lists,  edit the
    <filename>conf/ui-countries.json</filename> file. For example, to add 
    Norway to the list of countries, you would add the following to the 
    <filename>conf/ui-countries.json</filename> file:
   </para>
   <programlisting language="javascript">
{
    "key" : "norway",
    "value" : "Norway",
    "states" : [
        {
            "key" : "akershus",
            "value" : "Akershus"
        },
        {
            "key" : "aust-agder",
            "value" : "Aust-Agder"
        },
        {
            "key" : "buskerud",
            "value" : "Buskerud"
        },
...
   </programlisting>
   <para>
    Refresh your browser after this configuration change for the change to be
    picked up by the UI.
   </para>
  </section>
 </section>

 <section xml:id="ui-managing-users">
  <title>Managing Data Accounts With the Self-Service UI</title>
  <warning>
   <para>
    The data management functionality has moved to the Admin UI in the latest
    OpenIDM build. This section of the documentation will be updated shortly to
    reflect that change.
   </para>
  </warning>
  <para>
   Only administrative users (with the role <literal>openidm-admin</literal>)
   can add, modify, and delete data accounts. Regular users can modify certain
   aspects of their own accounts.
  </para>

  <para>
   With the following procedures, you can add, update, and deactivate accounts
   for Managed Objects such as users, or even something else.
  </para>

  <para>
   The Managed Object does not have to be a user. It can even be something
   different like an IoT device. The basic process for adding, modifying,
   deactivating, and deleting data accounts is the same. However, the details
   may vary; for example, many IoT devices do not have telephone numbers.
  </para>

  <procedure xml:id="add-user-account">
   <title>To Add a User Account</title>
   <step>
    <para>
     Log into the Self-Service UI at
     <literal>https://localhost:8443</literal> as an administrative user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click Add User.
    </para>
   </step>
   <step>
    <para>
     Complete the fields on the Create New User page.
    </para>
    <para>
     Most of these fields are self-explanatory. Be aware that the user interface
     is subject to policy validation, as described in <link
     xlink:href="integrators-guide#chap-policies" 
     xlink:role="http://docbook.org/xlink/role/olink">
     <citetitle>Using Policies to Validate Data</citetitle></link>. So, for
     example, the Email address must be of valid email address format, and the
     Password must comply with the password validation settings that are
     indicated in the panel to the right.
    </para>
    <para>
     The Role field reflects the roles that are defined in the
     <filename>ui-configuration.json</filename> file, as well as any managed
     roles that have been added. By default, the roles are mapped as follows:
    </para>
    <programlisting language="javascript">
"roles" : {
    "openidm-admin" : "Administrator",
    "openidm-authorized" : "User",
    "openidm-tasks-manager" : "Tasks Manager"
},  </programlisting>
    <para>
     A user can be assigned more than one role. Only users with the
     <literal>tasks-manager</literal> role can assign tasks to any candidate
     user for that task.
    </para>
   </step>
  </procedure>

  <mediaobject>
   <alt>OpenIDM Admin UI - Create User Account</alt>
   <imageobject>
    <imagedata fileref="images/ui-create-account.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <para>
   In a similar fashion, you can create accounts for other managed objects. If
   you followed the instructions discussed in the section on
   <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
         xlink:href="integrators-guide#ui-admin-mo-schema"><citetitle>Managed
    Object Schema</citetitle></link>, you should now see a Wearable Device
   managed object in the Admin UI.
  </para>

  <mediaobject>
   <alt>OpenIDM Admin UI - With Another Managed Object</alt>
   <imageobject>
    <imagedata fileref="images/ui-wearable-device-mo.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <procedure xml:id="ui-add-wearable-account">
   <title>To Add an Entry for a Non-User Managed Object</title>

   <para>
    This procedure applies if you created a Managed Object for something other
    than users. This procedure assumes that you have set up a Managed Object
    with an object title of <literal>Wearable Device</literal>.
   </para>

   <para>
    The first time you create an entry for a new Managed Object, you will see a
    relatively blank screen:
   </para>

   <mediaobject>
    <alt>OpenIDM Admin UI - New Managed Object</alt>
    <imageobject>
     <imagedata fileref="images/ui-initial-mo.png" format="PNG" />
    </imageobject>
   </mediaobject>

   <para>
    The items that you can add to the new Managed Object depends on the
    associated properties, as discussed in
    <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
          xlink:href="integrators-guide#ui-admin-mo-schema"><citetitle>Managed
     Object Schema</citetitle></link>. This procedure assumes that your new
    Managed Object is a wearable device.
   </para>

   <step>
    <para>
     Select Add. As shown in the screen, the button includes the
     <literal>Readable Title</literal> of the device.
    </para>
   </step>
   <step>
    <para>
     You should see entries for those property fields configured for the
     Managed Object. The information tooltips that appear are set to the
     <literal>Description</literal> of the Managed Object or the
     the <literal>Property</literal>.
    </para>
    <mediaobject>
     <alt>OpenIDM Self-Service UI - Required Properties</alt>
     <imageobject>
      <imagedata fileref="images/ui-mo-allprop.png" format="PNG" />
     </imageobject>
    </mediaobject>
   </step>
   <step>
    <para>
     After you save the properties for the new Managed Object entry, OpenIDM
     saves those entries in its internal repository. You can continue adding
     entries as needed.
    </para>
    <mediaobject>
     <alt>OpenIDM Self-Service UI - All Properties</alt>
     <imageobject>
      <imagedata fileref="images/ui-mo-wearable.png" format="PNG" />
     </imageobject>
    </mediaobject>
   </step>
   <step>
    <para>
     You can continue adding new elements to the Managed Object,
     or reconcile that Managed Object with another data store.
    </para>
   </step>

  </procedure>

  <para>
   In the following procedures, you can see how to update, deactivate, and
   delete user accounts, as well as how to view that account in different user
   resources. You can follow essentially the same procedures for other Managed
   Objects such as IoT devices.
  </para>

  <procedure xml:id="ui-update-account">
   <title>To Update a User Account</title>  
   <step>
    <para>
     Log into the Self-Service UI at
     <literal>https://localhost:8443</literal> as an administrative user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user that you want to update.
    </para>
   </step>
   <step>
    <para>
     On the profile page for the user, modify the fields you want to change and
     click Update.
    </para>
    <para>
     The user account is updated in the OpenIDM repository.
    </para>
   </step>
  </procedure>
 
  <procedure xml:id="deactivate-account">
   <title>To Deactivate a User Account</title>
   <step>
    <para>
     Follow steps 1-3 in <xref linkend="ui-update-account" />.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, select Inactive from the Account status list.
    </para>
   </step>
   <step>
    <para>
     Click Update.
    </para>
    <para>
     The user account is deactivated and the user can no longer log in to the
     system.
    </para>
    <para>
     Inactive users are indicated with a X icon in the Status column of the
     Users page. The following image shows that Steven Carter's account has been
     deactivated.
    </para>
   </step>  
  </procedure>

  <mediaobject>
   <alt>OpenIDM UI - Deactivate User Account</alt>
   <imageobject>
    <imagedata fileref="images/ui-deactivate-account.png" format="PNG" />
   </imageobject>
  </mediaobject>

  <procedure xml:id="reset-user-password">
   <title>To Reset a User's Password</title>
   <para>
    Users can change their own passwords by following the Change Security Data
    link in their profiles. This process requires that users know their existing
    passwords.
   </para>
   <para>
    In a situation where a user forgets his password, an administrator can reset
    the password of that user without knowing the user's existing password.
   </para>
   <step>
    <para>
     Follow steps 1-3 in <xref linkend="ui-update-account" />.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, click Change password.
    </para>
   </step>
   <step>
    <para>
     Enter a new password that conforms to the password policy and click Update.
    </para>
    <para>
     The user password is updated in the repository.
    </para>
   </step>  
  </procedure>
 
  <procedure xml:id="delete-user-account">
   <title>To Delete a User Account</title>  
   <step>
    <para>
     Log into the Self-Service UI at
     <literal>https://localhost:8443</literal> as an administrative user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user that you want to delete.
    </para>
   </step>
   <step>
    <para>
     On the user's profile page, click Delete.
    </para>
   </step>
   <step>
    <para>
     Click OK to confirm the deletion.
    </para>
    <para>
     The user is deleted from the internal repository.
    </para>
   </step>
  </procedure>

  <procedure xml:id="user-linked-view">
   <title>To View an Account in External Resources</title>
   <para>
    The Self-Service UI displays the details of the account in the
    OpenIDM repository (managed/user). When a mapping has been configured
    between the repository and one or more external resources, you can view what
    that user account looks like in any of the systems to which it is linked.
    Note that this view is read-only - you cannot update a user record in a
    linked system from within the Self-Service UI.
   </para>
   <para>
    By default, <emphasis>implicit synchronization</emphasis> is enabled for
    mappings <emphasis>from</emphasis> the <literal>managed/user</literal>
    repository <emphasis>to</emphasis> any external resource. This means that
    when you update a managed object, any mappings defined in the
    <filename>sync.json</filename> file that have the managed object as the
    source are automatically executed to update the target system. You can see
    these changes in the Linked Systems section of a user's profile.
   </para>
   <para>
    To view a user's linked accounts:
   </para>
   <step>
    <para>
     Log into the Self-Service UI at
     <literal>https://localhost:8443</literal> as an administrative
     user.
    </para>
   </step>
   <step>
    <para>
     Select the Users tab.
    </para>
   </step>
   <step>
    <para>
     Click the Username of the user whose accounts you want to view.
    </para>
   </step>
   <step>
    <para>
     At the bottom of the user profile, the Linked Systems panel indicates the
     external resource or resources to which this user entry is mapped.
    </para>
   </step>
   <step>
    <para>
     Select the resource in which you want to view the account, from the Linked
     Resource list.
    </para>
    <para>
     The user record in the linked resource is displayed.
    </para>
    <para>
     The following image shows the user account for a user <literal>jdoe</literal>,
     as it exists in the LDAP directory to which the managed user repository is
     mapped.
    </para>
     <mediaobject>
      <alt>New user record for jdoe</alt>
      <imageobject>
       <imagedata fileref="images/linked-view-fdoe.png" format="PNG" />
      </imageobject>
     </mediaobject>
   </step>
  </procedure>
 </section>

 <section xml:id="ui-managing-workflows">
  <title>Managing Workflows From the Self-Service UI</title>
  <para>
   The Self-Service UI is integrated with the embedded Activiti worfklow
   engine, enabling users to interact with workflows. Available workflows are
   displayed under the Processes item on the Dashboard. In order for a workflow
   to be displayed here, the workflow definition file must be present in the
   <filename>openidm/workflow</filename> directory.
  </para>
  <para>
   A sample workflow integration with the Self-Service UI is provided in
   <filename>openidm/samples/workflow</filename>, and documented in <link
   xlink:href="integrators-guide#example-provisioning-workflow"
   xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Sample Workflow -
   Provisioning User Accounts</citetitle></link>. Follow the steps in that
   sample for an understanding of how the workflow integration works.
  </para>
  <para>
   General access to workflow-related endpoints is based on the access rules
   defined in the <filename>script/access.js</filename> file. The configuration
   defined in the <filename>conf/process-access.json</filename> file determines
   who can invoke workflows. By default all users with the role
   <literal>openidm-authorized</literal> or <literal>openidm-admin</literal> can
   invoke any available workflow. The default
   <filename>process-access.json</filename> file is as follows:
  </para>
  <programlisting language="javascript">
{
    "workflowAccess" : [
        {
            "propertiesCheck" : {
                "property" : "_id",
                "matches" : ".*",
                "requiresRole" : "openidm-authorized"
            }
        },
        {
            "propertiesCheck" : {
                "property" : "_id",
                "matches" : ".*",
                "requiresRole" : "openidm-admin"
            }
        }
    ]
}  
  </programlisting>
  <variablelist>
   <varlistentry>
    <term><literal>"property"</literal></term>
    <listitem>
     <para>
      Specifies the property used to identify the process definition. By default,
      process definitions are identified by their <literal>_id</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>"matches"</literal></term>
    <listitem>
     <para>
      A regular expression match is performed on the process definitions,
      according to the specified property. The default
      (<literal>"matches" : ".*"</literal>) implies that all process definition
      IDs match.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><literal>"requiresRole"</literal></term>
    <listitem>
     <para>
      Specifies the OpenIDM role that is required for users to have access to
      the matched process definition IDs. In the default file, users with the
      role <literal>openidm-authorized</literal> or
      <literal>openidm-admin</literal> have access.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   To extend the process action definition file, identify the processes to which
   users should have access, and specify the qualifying user roles. For example,
   if you wanted to restrict access to a process definition whose ID was
   <literal>567</literal>, to users with the role <literal>ldap</literal> you
   would add the following to the <filename>process-access.json</filename> file:
  </para>
  <programlisting>
{
    "propertiesCheck" : {
        "property" : "_id",
        "matches" : "567",
        "requiresRole" : "ldap"
    }
}
  </programlisting>
 </section>

 <section xml:id="ui-customizing">
  <title>Changing the UI Theme</title>
  <para>
   You can customize the theme of the user interface. OpenIDM uses the
   <link xlink:href="http://getbootstrap.com"
         xlink:show="new"><citetitle>Bootstrap</citetitle></link> framework. You
   can now download and customize the OpenIDM UI with the
   Bootstrap themes of your choice. OpenIDM is also configured with the
   <link xlink:href="http://fortawesome.github.io/Font-Awesome/" xlink:show="new">
    <citetitle>Font Awesome</citetitle> CSS toolkit</link>.
  </para>

  <note>
   <para>
    If you use <link xlink:show="new"
    xlink:href="http://fortawesome.github.io/Font-Awesome/icons/">
    <citetitle>Brand Icons from the Font Awesome CSS Toolkit</citetitle></link>,
    be aware of the following statement:
   </para>
   <para>
    All brand icons are trademarks of their respective owners. The use of these
    trademarks does not indicate endorsement of the trademark holder by
    ForgeRock, nor vice versa.
   </para>
  </note>

  <section xml:id="ui-bootstrap">
   <title>OpenIDM UI Themes and Bootstrap</title>

   <para>
    You can configure a few features of the OpenIDM UI in the
    <filename>ui-themeconfig.json</filename> file in the
    <filename>openidm/conf</filename> subdirectory. However, to change most
    theme-related features of the UI, you will have to take target files from
    <filename>openidm/ui/default</filename> subdirectories, and copy them to the
    appropriate <filename>openidm/ui/extension</filename> subdirectory.
   </para>

   <para>
    The default OpenIDM UI theme configuration files are stored in the following
    directories:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      <filename>openidm/ui/default/admin/public/css/common</filename>
     </para>
     <para>
      Contains Bootstrap theme files for the Admin UI.
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>openidm/ui/default/admin/public/css/fontawesome</filename>
     </para>
     <para>
      Contains Font Awesome CSS toolkit files for the Admin UI.
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>openidm/ui/default/selfservice/public/css/common</filename>
     </para>
     <para>
      Contains Bootstrap theme files for the Self-Service UI.
     </para>
    </listitem>
    <listitem>
     <para>
      <filename>openidm/ui/default/selfservice/public/css/fontawesome</filename>
     </para>
     <para>
      Contains Font Awesome CSS toolkit files for the Self-Service UI.
     </para>
    </listitem>
  </itemizedlist>

   <para>
    The default configuration files for the Admin and Self-Service UIs are
    identical for theme configuration.
   </para>

   <para>
    You should not change these files directly. By default the UI reads the
    stylesheets and images from the <filename>openidm/ui/default</filename>
    directory. Do not modify the files in this directory. Your changes may be
    overwritten in the next OpenIDM release.
   </para>

   <para>
    To customize your UI, first set up matching subdirectories in the
    <filename>openidm/ui/extension</filename> subdirectory. For example,
    assume you want to customize colors, logos, and so on.
   </para>

   <para>
    You can set up a new theme, primarily through the
    <filename>bootstrap.min.js</filename> file. As the default version of this
    file is in <filename>openidm/ui/default/admin/public/libs</filename>,
    you would copy a custom <filename>bootstrap.min.js</filename> file to
    the <filename>openidm/ui/extension/libs</filename> directory.
   </para>

   <para>
    You can also set up new custom colors. For that purpose, copy the
    <filename>forgerock-variables.less</filename> file from the
    <filename>openidm/ui/default/admin/public/css/common/</filename>
    directory to the <filename>openidm/ui/extension/css/common</filename>
    directory.
   </para>

   <para>
    You can then make changes to the <filename>forgerock-variables.less</filename>
    file that you just copied. Any changes that you make affects both the Admin
    and Self-Service UIs.
   </para>

  </section>

  <section xml:id="ui-logo">
   <title>Changing the Default Logo</title>
   <para>
    The default logo is located in the
    <filename>openidm/ui/default/selfservice/public/images</filename> directory.
    Any file named <filename>logo.png</filename>, added to the directory
    <filename>openidm/ui/extension/images</filename>, will replace the default
    logo when the browser is refreshed.
   </para>
   <para>
    To specify a different file name, or to control the size, and other
    properties of the image file that is used for the logo, adjust the
    <literal>logo</literal> property in the UI theme configuration file
    (<filename>conf/themeconfig.json</filename>).
   </para>
   <para>
    The following change to the UI theme configuration file points to an image
    file named <filename>example-logo.png</filename>, in the
    <filename>openidm/ui/extension/images</filename> directory.
   </para>
   <programlisting language="javascript">...
   "logo" : {
       "src" : "images/example-logo.png",
       "title" : "Example.com",
       "alt" : "Example.com",
       "height" : "80",
       "width" : "120"
   },
...</programlisting>
   <para>
    Refresh your browser window for the new logo to appear.
   </para>
  </section>

  <section xml:id="ui-locale">
   <title>Changing the Language of the UI</title>
   <para>
    Currently, the UI is provided only in US English. You can translate the UI
    and specify that your own locale is used. The following example shows how to
    translate the UI into French.
   </para>
   <procedure>
    <step>
     <para>
      Copy the default locale to a new folder in the same location
      (<filename>openidm/ui/default/selfservice/public/locales</filename>):
     </para>
     <screen>$ cd /path/to/openidm/ui/default/selfservice/public/locales
$ cp -R en/ fr/</screen>
     <para>
      The new locale (<literal>fr</literal>) now contains the default
      <filename>translation.json</filename> file.
     </para>
     <screen><userinput>$ ls fr/</userinput>
<computeroutput>translation.json</computeroutput></screen>
    </step>
    <step>
     <para>
      Translate the values of the properties in the
      <filename>fr/translate.json</filename> file. Do <emphasis>not</emphasis>
      translate the property names. For example:
     </para>
     <programlisting language="javascript">...
"UserMessages" : {
    "changedPassword" : "Mot de passe a été modifié",
    "profileUpdateFailed" : "Problème lors de la mise à jour du profil",
    "profileUpdateSuccessful" : "Profil a été mis à jour",
    "userNameUpdated" : "Nom d'utilisateur a été modifié",
.... </programlisting>
    </step>
    <step>
     <para>
      Change the UI configuration to use the new locale by setting the value of
      the <literal>lang</literal> property in the
      <filename>/path/to/openidm/conf/ui-configuration.json</filename> file, as
      follows:
     </para>
     <screen>"lang" : "fr",</screen>
    </step>
    <step>
     <para>
      Refresh your browser window for the modification to be applied.
     </para>
    </step>
   </procedure>
  </section>

  <section xml:id="ui-project-config">
   <title>Creating a Project-Specific UI Theme</title>
   <!--TODO this is not working for me -->
   <para>
    You can create specific UI themes for different projects and then point a
    particular UI instance to use a defined theme on startup. To create a
    complete custom theme, follow these steps:
   </para>
   <procedure>
    <step>
     <para>
      Shut down the OpenIDM instance, if it is running. In the Felix
      administration console, type:
     </para>
     <screen>shutdown
-&gt;</screen>
    </step>
    <step>
     <para>
      Clear the <literal>felix-cache</literal> directory.
     </para>
     <screen>$ rm -rf felix-cache</screen>
    </step>
    <step>
     <para>
      Copy the entire default UI theme to an accessible location. For example:
     </para>
     <screen>$ cd /path/to/openidm/ui
$ cp -r default ../new-project-theme</screen>
    </step>
    <step>
     <para>
      In the copied theme, modify the required elements, as described in the
      previous sections. Note that nothing is copied to the extension folder in
      this case - changes are made in the copied theme.
     </para>
    </step>
    <step>
     <para>
      In the <literal>openidm/conf/boot/boot.properties</literal> file, add the
      following line, specifying the location of the new theme. The path is
      relative to the installation root of the OpenIDM instance.
     </para>
     <screen>openidm.ui.fileinstall.dir=new-project-theme</screen>
    </step>
    <step>
     <para>
      Restart OpenIDM.
     </para>
     <screen>$ cd /path/to/openidm
$ ./startup.sh</screen>
    </step>
    <step>
     <para>
      Relaunch the UI in your browser. The UI is displayed with the new custom
      theme.
     </para>
    </step>
   </procedure>
  </section>
 </section>

 <section xml:id="ui-custom-template">
  <title>Customizing a UI Template</title>

  <para>
   You may want to customize the information that you can include in the Web UI.
   To do so copy appropriate files from the <filename>openidm/ui/default</filename>
   directory to the <filename>openidm/ui/extension</filename> directory. The
   process is similar to <xref linkend="ui-customizing" />.
  </para>

  <itemizedlist>
   <listitem>
    <para>
     For the Admin UI, find HTML template files in the
     <filename>admin/public/templates</filename> subdirectory.
    </para>
   </listitem>
   <listitem>
    <para>
     For the Self-Service UI, find HTML template files in the
     <filename>selfservice/public/templates</filename> subdirectory.
    </para>
   </listitem>
  </itemizedlist>

  <para>
   In this section, you will see how to add another entry to the Self-Service
   UI Add User page.
  </para>

  <para>
   Start OpenIDM in the Self-Service UI by navigating to
   <literal>https://localhost:8443</literal>. Select Users and click
   Add User.
  </para>

  <para>
   If you want users to add more information, you can modify the template.
   The template associated with the Create New Account page is
   <filename>AdminUserRegistrationTemplate.html</filename>.
  </para>

  <para>
   In the following steps, you will copy the template for the Create New Account
   page to the appropriate subdirectory, and then edit that template.
  </para>

  <procedure>
   <step>
    <para>
     Create the appropriate subdirectory:
    </para>
    <screen>$ <userinput>mkdir /path/to/openidm/ui/extension/templates/admin</userinput></screen>
   </step>
   <step>
    <para>
     Copy the template file to the new subdirectory:
    </para>
    <screen>$ <userinput>cd /path/to/openidm/ui/default/selfservice/public/templates/admin</userinput>
$ <userinput>cp AdminUserRegistrationTemplate.html \
/path/to/openidm/ui/extension/templates/admin</userinput></screen>
   </step>
   <step>
    <para>
     Open the copied template file in a text editor:
    </para>
    <screen>$ <userinput>cd /path/to/openidm/ui/extension/templates/admin</userinput>
$ <userinput>vi AdminUserRegistrationTemplate.html</userinput></screen>
   </step>
   <step>
    <para>
     Create a new <literal>form-group has-feedback</literal> stanza in the desired
     location. The following excerpt from a modified version of the file shows
     a <literal>group-field-block</literal> named "Employee Title", placed after
     the "common.user.familyName" (Last Name) entry:
    </para>
    <screen>&lt;div class="form-group has-feedback"&gt;
 &lt;label class="col-sm-3 control-label" for="sn"&gt;{{t "common.user.familyName"}}&lt;/label&gt;
  &lt;div class="float-left separate-message"&gt;
  &lt;div class="group-input-span"&gt;
   &lt;input type="text" id="sn" name="sn" value="" data-validation-dependents="password" /&gt;
   &lt;span class="error"&gt;x&lt;/span&gt;
  &lt;/div&gt;
  &lt;div class="validation-message"&gt;&lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;div class="group-field-block"&gt;
 &lt;label for="employeeTitle" class="light align-right"&gt;Employee Title&lt;/label&gt;
 &lt;div class="float-left separate-message"&gt;
  &lt;div class="group-input-span"&gt;
   &lt;input type="text" id="title" name="title" value="" /&gt;
  &lt;/div&gt;
  &lt;div class="validation-message"&gt;&lt;/div&gt;
 &lt;/div&gt;
&lt;/div&gt;</screen>
   </step>
   <step>
    <para>
     Start OpenIDM.
    </para>
   </step>
   <step>
    <para>
     Open a browser free of any cached information. Navigate to the
     Self-Service UI at <literal>https://localhost:8443</literal>.
     Select Users and then click Add User.
    </para>
   </step>
   <step>
    <para>
     Observe the Create New Account screen with the Employee Title entry. You
     can now use the Self-Service UI to add new users with employee
     titles.
    </para>

    <mediaobject xml:id="custom-template">
     <alt>A Custom Add User Template</alt>
     <imageobject>
      <imagedata fileref="images/custom-template.png" format="PNG" />
     </imageobject>
     <textobject>
      <para>After you configure the Add User template, you can use the result.
      </para>
     </textobject>
    </mediaobject>

   </step>

  </procedure>

 </section>

 <section xml:id="ui-external-password-reset">
  <title>Using an External System for Password Reset</title>
  <para>
   By default, the password reset mechanism is handled internally, in OpenIDM.
   You can reroute password reset in the event that a user has forgotten his
   password, by specifying an external URL to which password reset requests are
   sent. Note that this URL applies to the password reset link on the login page
   only, not to the security data change facility that is available after a user
   has logged in.
  </para>
  <para>
   To set an external URL to handle password reset, set the
   <literal>passwordResetLink</literal> parameter in the UI configuration file
   (<filename>conf/ui-configuration.json</filename>) file. The following example
   sets the <literal>passwordResetLink</literal> to
   <literal>https://accounts.example.com/account/reset-password</literal>.
  </para>
  <screen>passwordResetLink: "https://accounts.example.com/reset-password"</screen>
  <para>
   The <literal>passwordResetLink</literal> parameter takes either an empty
   string as a value (which indicates that no external link is used) or a full
   URL to the external system that handles password reset requests.
  </para>
  <note>
   <para>
    External password reset and security questions for internal password reset
    are mutually exclusive. Therefore, if you set a value for the
    <literal>passwordResetLink</literal> parameter, users will not be prompted
    with any security questions, regardless of the setting of the
    <literal>securityQuestions</literal> parameter.
   </para>
  </note>
 </section>

 <section xml:id="ui-external-logout">
  <title>Providing a Logout URL to External Applications</title>
  <para>
   By default, a UI session is invalidated when a user clicks on the Log out
   link. In certain situations your external applications might require a
   distinct logout URL to which users can be routed, to terminate their UI
   session.
  </para>
  <para>
   The logout URL is <literal>#logout</literal>, appended to the UI URL, for
   example, <literal>https://localhost:8443/index.html#logout/</literal>.
  </para>
  <para>
   The logout URL effectively performs the same action as clicking on the Log
   out link of the UI.
  </para>
 </section>

 <section xml:id="ui-path">
  <title>Changing the UI Path</title>
  <para>
   By default, the self service UI is registered at the root context and is
   accessible at the URL <literal>https://localhost:8443</literal>. To specify
   a different URL, edit the
   <filename><replaceable>project-dir</replaceable>/conf/ui.context-enduser.json</filename>
   file, setting the <literal>urlContextRoot</literal> property to the new URL.
  </para>
  <para>
   For example, to change the URL of the self service UI to
   <literal>https://localhost:8443/exampleui</literal>, edit
   the file as follows:
  </para>
  <screen>"urlContextRoot" : "/exampleui",</screen>
  <para>
   Alternatively, to change the Self-Service UI URL in the Admin UI, follow
   these steps:
  </para>
  <procedure>
   <step>
    <para>
     Log in to the Admin UI.
    </para>
   </step>
   <step>
    <para>
     Select Configure > System Preferences, and select the System Configurations
     tab.
    </para>
   </step>
   <step>
    <para>
     Specify the new context route in the Relative URL field.
    </para>
   </step>
  </procedure>
 </section>

 <section xml:id="ui-disabling">
  <title>Disabling the UI</title>
  <para>
   The UI is packaged as a separate bundle that can be disabled in the
   configuration before server startup. To disable the registration of the UI
   servlet, edit the <filename>openidm/conf/ui.context-enduser.json</filename>
   file, setting the <literal>enabled</literal> property to false:
  </para>
  <screen>"enabled" : false,</screen>
 </section>
</chapter>