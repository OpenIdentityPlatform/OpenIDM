<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2012 ForgeRock AS
  !    
-->
<chapter xml:id='chap-services'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Starting and Stopping OpenIDM</title>

 <para>This chapter covers the scripts provided for starting and stopping 
 OpenIDM, and describes how to verify the <emphasis>health</emphasis> of a 
 system, that is, that all requirements are met for a successful system 
 startup.</para>
 
 <section xml:id="starting-and-stopping">
  <title>To Start and Stop OpenIDM</title>

  <indexterm>
   <primary>Starting OpenIDM</primary>
  </indexterm>
  <indexterm>
   <primary>Stopping OpenIDM</primary>
  </indexterm>

  <para>By default you start and stop OpenIDM in interactive mode.</para>

  <itemizedlist>
   <para>To start OpenIDM interactively, open a terminal or command window,
   change to the <filename>openidm</filename> directory, and run the startup
   script:</para>
   <listitem>
    <para><command>startup.sh</command> (UNIX)</para>
   </listitem>
   <listitem>
    <para><command>startup.bat</command> (Windows)</para>
   </listitem>
  </itemizedlist>

  <para>The startup script starts OpenIDM, and opens an OSGi console with a
  <literal>-&gt;</literal> prompt where you can issue console commands.</para>

  <para>To stop OpenIDM interactively in the OSGi console, enter the
  <command>shutdown</command> command.</para>

  <screen>-&gt; shutdown</screen>

  <orderedlist>

   <para>You can also start OpenIDM as a background process on UNIX, Linux, and
   Mac OS X. Follow these steps <emphasis>before starting OpenIDM for the first
   time</emphasis>.</para>
   <listitem>
    <para>If you have already started OpenIDM, then shut down OpenIDM and
    remove Felix cache files under
    <filename>openidm/felix-cache/</filename>.</para>

    <screen>-&gt; shutdown
...
$ rm -rf felix-cache/*</screen>
   </listitem>
   <listitem>
    <para>Disable <literal>ConsoleHandler</literal> logging before starting
    OpenIDM by editing <filename>openidm/conf/logging.properties</filename>
    to set <literal>java.util.logging.ConsoleHandler.level = OFF</literal>,
    and to comment out other references to <literal>ConsoleHandler</literal>,
    as shown in the following excerpt.</para>
    <programlisting language="ini">
# ConsoleHandler: A simple handler for writing formatted records to System.err
#handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler
handlers=java.util.logging.FileHandler
...
# --- ConsoleHandler ---
# Default: java.util.logging.ConsoleHandler.level = INFO
java.util.logging.ConsoleHandler.level = OFF
#java.util.logging.ConsoleHandler.formatter = ...
#java.util.logging.ConsoleHandler.filter=...</programlisting>
   </listitem>
   <listitem>
    <para>Remove the text-based OSGi console bundle,
    <filename>bundle/org.apache.felix.shell.tui-<replaceable>version</replaceable>.jar</filename>.</para>
   </listitem>
   <listitem>
    <para>Start OpenIDM in the background.</para>
    <screen>$ ./startup.sh &amp;
[3] 454
$ ./startup.sh
Using OPENIDM_HOME:   /path/to/openidm
Using OPENIDM_OPTS:   -Xmx1024m
Using LOGGING_CONFIG:
 -Djava.util.logging.config.file=/path/to/openidm/conf/logging.properties
Using boot properties at /path/to/openidm/conf/boot/boot.properties

$</screen>
    <para>Alternatively, use the <command>nohup</command> command to keep
    OpenIDM running after you log out.</para>

    <screen>$ nohup ./startup.sh &amp;
[2] 394
$ appending output to nohup.out
$</screen>
   </listitem>
  </orderedlist>

  <para>To stop OpenIDM running as a background process, use the
  <command>shutdown.sh</command> script.</para>
  <screen>$ ./shutdown.sh
./shutdown.sh
Stopping OpenIDM (454)</screen>
 </section>
 
 <section xml:id="system-healthcheck">
  <title>Verifying the Health of an OpenIDM System</title>

  <indexterm> 
   <primary>healthcheck</primary>
  </indexterm>
  
  <para>Due to the highly modular, configurable nature of OpenIDM, it is often 
  difficult to assess whether a system has started up successfully, or whether 
  the system is ready and stable after dynamic configuration changes have been 
  made.</para>
  
  <para>OpenIDM provides a configurable health check service that verifies 
  that the required modules and services for an operational system are up and 
  running. During system startup, OpenIDM checks that these modules and 
  services are available and reports on whether any requirements for an 
  operational system have not been met. If dynamic configuration changes are 
  made, OpenIDM rechecks that the required modules and services are functioning 
  so that system operation is monitored on an ongoing basis.</para>
  
  <para>The health check service reports on the state of the OpenIDM system and 
  outputs this state to the console and to the log files. The system can be in 
  one of the following states:</para>
  
  <simplelist>
   <member><literal>STARTING</literal> - OpenIDM is starting up</member>
   <member><literal>ACTIVE_READY</literal> - all of the specified requirements 
   have been met to consider the OpenIDM system ready</member>
   <member><literal>ACTIVE_NOT_READY</literal> - one or more of the specified 
   requirements have not been met and the OpenIDM system is not considered ready
   </member>
   <member><literal>STOPPING</literal> - OpenIDM is shutting down</member>   
  </simplelist>
  
  <para>By default, OpenIDM checks the following modules and services:</para>

  <para><emphasis role="bold">Required Modules</emphasis></para>
  <screen>
"org.forgerock.openicf.framework.connector-framework"
"org.forgerock.openicf.framework.connector-framework-internal"
"org.forgerock.openicf.framework.connector-framework-osgi"
"org.forgerock.openidm.audit"
"org.forgerock.openidm.core"
"org.forgerock.openidm.enhanced-config"
"org.forgerock.openidm.external-email"
"org.forgerock.openidm.external-rest"
"org.forgerock.openidm.filter"
"org.forgerock.openidm.httpcontext"
"org.forgerock.openidm.infoservice"
"org.forgerock.openidm.policy"
"org.forgerock.openidm.provisioner"
"org.forgerock.openidm.provisioner-openicf"
"org.forgerock.openidm.repo"
"org.forgerock.openidm.restlet"
"org.forgerock.openidm.smartevent"
"org.forgerock.openidm.system"
"org.forgerock.openidm.ui"
"org.forgerock.openidm.util"
"org.forgerock.commons.org.forgerock.json.resource"
"org.forgerock.commons.org.forgerock.json.resource.restlet"
"org.forgerock.commons.org.forgerock.restlet"
"org.forgerock.commons.org.forgerock.util"
"org.forgerock.openidm.security-jetty"
"org.forgerock.openidm.jetty-fragment"
"org.forgerock.openidm.quartz-fragment"
"org.ops4j.pax.web.pax-web-extender-whiteboard"
"org.forgerock.openidm.scheduler"
"org.ops4j.pax.web.pax-web-jetty-bundle"
"org.forgerock.openidm.repo-jdbc"
"org.forgerock.openidm.repo-orientdb"
"org.forgerock.openidm.config"
"org.forgerock.openidm.crypto"  
  </screen>
  
  <para><emphasis role="bold">Required Services</emphasis></para>
<screen>
"org.forgerock.openidm.config"
"org.forgerock.openidm.provisioner"
"org.forgerock.openidm.provisioner.openicf.connectorinfoprovider"
"org.forgerock.openidm.external.rest"
"org.forgerock.openidm.audit"
"org.forgerock.openidm.policy"
"org.forgerock.openidm.managed"
"org.forgerock.openidm.script"
"org.forgerock.openidm.crypto"
"org.forgerock.openidm.recon"
"org.forgerock.openidm.info"
"org.forgerock.openidm.router"
"org.forgerock.openidm.scheduler"
"org.forgerock.openidm.scope"
"org.forgerock.openidm.taskscanner"
     </screen> 
  
  <para>You can replace this list, or add to it, by adding the following lines 
  to the <filename>openidm/conf/boot/boot.properties</filename> file:</para>
  
  <simplelist>
   <member><literal>"openidm.healthservice.reqbundles"</literal> - overrides 
   the default required bundles. Bundles are specified as a list of symbolic 
   names, separated by commas.</member>
   <member><literal>"openidm.healthservice.reqservices"</literal> - overrides 
   the default required services. Services are specified as a list of symolic 
   names, separated by commas.</member>
   <member><literal>"openidm.healthservice.additionalreqbundles"</literal> - 
   specifies required bundles (in addition to the default list). Bundles are 
   specified as a list of symbolic names, separated by commas.</member>
   <member><literal>"openidm.healthservice.additionalreqservices"</literal> - 
   specifies required services (in addition to the default list). Services are 
   specified as a list of symbolic names, separated by commas.</member>
  </simplelist>
  
  <para>By default, OpenIDM gives the system ten seconds to start up all 
  the required bundles and services, before the system readiness is assessed. 
  Note that this is not the total start time, but the time required to complete 
  the service startup after the framework has started. You can change this 
  default by setting the value of the <literal>servicestartmax</literal> 
  property (in miliseconds) in the 
  <filename>openidm/conf/boot/boot.properties</filename> file. This example 
  sets the startup time to five seconds.</para>
  
  The 10 seconds to finish starting services is after the bundles and framework started, not the total start time.
  
  <screen>openidm.healthservice.servicestartmax=5000</screen>
  
  <para>The health check service works in tandem with the scriptable information 
  service. For more information see <link xlink:href="integrators-guide#info-service"
xlink:role="http://docbook.org/xlink/role/olink">
 <citetitle>OpenIDM Information Service</citetitle></link>.</para>
  
 </section>


</chapter>
