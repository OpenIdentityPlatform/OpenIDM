<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2012-2015 ForgeRock AS
  !    
-->
<glossary xml:id='openidm-glossary'
 xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
 http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
<title>OpenIDM Glossary</title>

<glossentry>
 <glossterm>assignment</glossterm>
 <glossdef>
  <para>
   The definition of an <emphasis>assignment</emphasis>, in the context of roles,
   depends on the following:
  </para>
  <itemizedlist>
   <listitem>
    <para>Does the assignment imply what account a user should have?</para>
    <para>
     For example, if you want to assign a user to (or remove a user from) a role
     of Airplane Mechanics, the details within that role define what OpenIDM
     executes on changing the account.
    </para>
   </listitem>
   <listitem>
    <para>What happens when a user gets (loses) an assignment?</para>
    <para>
     OpenIDM may execute a custom <literal>onAssignment</literal>
     or an <literal>onUnassignment</literal> script.
    </para>
   </listitem>
   <listitem>
    <para>What is the assignment operation?</para>
    <para>
     When an administrator assigns a role to (on unassigns a role from) a user,
     OpenIDM processes that change with one of the following operations:
    </para>
    <programlisting>"assignmentOperation" : "mergeWithTarget"</programlisting>
    <programlisting>"unassignmentOperation" : "removeFromTarget"
    </programlisting>
   </listitem>
  </itemizedlist>

  <para>
   Some assignments may include an<literal>entitlement</literal>, where the
   associated role includes access rights to specified resources.
  </para>

  <para>
   For more information, see the following section:
   <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
         xlink:href="integrators-guide#sample-role-definition">
    <citetitle>A Sample Role Definition for Two Remote Systems</citetitle>
   </link>
   .
  </para>
 </glossdef>
</glossentry>

 <glossentry>
  <glossterm>correlation query</glossterm>
  <glossdef>
   <para>
    A correlation query specifies an expression that matches existing entries in
    a source repository to one or more entries on a target repository. While a
    correlation query may be built with a script, it is <emphasis>not</emphasis>
    a correlation script.
   </para>
   <para>
    As noted in the following section:
    <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
          xlink:href="integrators-guide#correlation">
     <citetitle>Correlating Existing Target Objects</citetitle></link>, you can
    set up a query definition, such as<literal>_queryId</literal>,<literal>
    _queryFilter</literal>, or<literal>_queryExpression</literal>, possibly
    with the help of a<literal>linkQualifier</literal>.
   </para>
  </glossdef>
 </glossentry>

 <glossentry>
  <glossterm>correlation script</glossterm>
  <glossdef>
   <para>
    A correlation script matches existing entries in a source repository, and
    returns the IDs of one or more matching entries on a target repository.
    While it skips the intermediate step associated with a<literal>correlation
    query</literal>, a correlation script can be relatively complex, based on
    the operations of the script.
   </para>
  </glossdef>
 </glossentry>

 <glossentry>
  <glossterm>entitlement</glossterm>
  <glossdef>
   <para>
    An entitlement is a collection of attributes that can be added to a user
    entry via roles. As such, it is a specialized type of
    <literal>assignment</literal>. A user or device with an entitlement, gets
    access rights to specified resources. An entitlement is a property of a
    managed object.
   </para>
  </glossdef>
 </glossentry>

 <glossentry>
 <glossterm>JSON</glossterm>
 <glossdef>
  <para>JavaScript Object Notation, a lightweight data interchange format 
  based on a subset of JavaScript syntax. For more information, see the 
  <link xlink:show="new" xlink:href="http://www.json.org">JSON</link> site.</para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>JWT</glossterm>
 <glossdef>
  <para>
   JSON Web Token. As noted in the <link xlink:show="new"
   xlink:href="http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html">
   <citetitle>JSON Web Token draft IETF Memo</citetitle></link>,
   "JSON Web Token (JWT) is a compact URL-safe means of representing claims to
   be transferred between two parties." For OpenIDM, the JWT is associated
   with the <literal>JWT_SESSION</literal> authentication module.
  </para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>managed object</glossterm>
 <glossdef>
  <para>An object that represents the identity-related data managed by OpenIDM. 
  Managed objects are configurable, JSON-based data structures that OpenIDM 
  stores in its pluggable repository. The default configuration of a managed 
  object is that of a user, but you can define any kind of managed object, for 
  example, groups or roles.</para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>mapping</glossterm>
 <glossdef>
  <para>A policy that is defined between a source object and a target object 
  during reconciliation or synchronization. A mapping can also define a trigger 
  for validation, customization, filtering, and transformation of source and 
  target objects.</para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>OSGi</glossterm>
 <glossdef>
  <para>
   A module system and service platform for the Java programming language that
   implements a complete and dynamic component model. For a good introduction,
   see the <link xlink:show="new"
   xlink:href="http://www.osgi.org/About/WhyOSGi">OSGi</link> site. While
   OpenIDM services are designed to run in any OSGi container, currently only
   <link xlink:show="new" xlink:href="http://felix.apache.org/">Apache
   Felix</link> is supported.
  </para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>reconciliation</glossterm>
 <glossdef>
  <para>During reconciliation, comparisons are made between managed objects 
  and objects on source or target systems. Reconciliation can result in one 
  or more specified actions, including, but not limited to, synchronization.
  </para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>resource</glossterm>
 <glossdef>
  <para>An external system, database, directory server, or other source of 
  identity data to be managed and audited by the identity management system.
  </para>
 </glossdef>
</glossentry>

<glossentry xml:id='gloss-rest'>
 <glossterm>REST</glossterm>
 <glossdef>
  <para>Representational State Transfer. A software architecture style for 
  exposing resources, using the technologies and protocols of the World Wide Web. 
  REST describes how distributed data objects, or resources, can be defined and 
  addressed.
  </para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>role</glossterm>
 <glossdef>
  <para>
   OpenIDM includes two different types of roles: default OpenIDM roles and
   provisioning roles most often associated with workflows. In both cases,
   roles can be set up as an
   <literal>assignment</literal>
   for one or more
   accounts.
  </para>
  <itemizedlist>
   <listitem>
    <para>
     OpenIDM includes four default roles:<literal>openidm-reg</literal>,
     <literal>openidm-admin</literal>,<literal>openidm-authorized</literal>,
     and<literal>openidm-cert</literal>. For more information see the following
     section on
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#openidm-roles">
      <citetitle>Roles and Authentication</citetitle></link>.
    </para>
   </listitem>
   <listitem>
    <para>
     OpenIDM supports the configuration of custom managed roles that can be
     assigned to specific accounts. For more information, see the section on
     <link xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
           xlink:href="integrators-guide#configuring-custom-roles">
      <citetitle>Configuring Custom Roles</citetitle></link>.
    </para>
   </listitem>
  </itemizedlist>
 </glossdef>
</glossentry>

 <glossentry>
 <glossterm>source object</glossterm>
 <glossdef>
  <para>In the context of reconciliation, a source object is a data object on 
  the source system, that OpenIDM scans before attempting to find a 
  corresponding object on the target system. Depending on the defined mapping, 
  OpenIDM then adjusts the object on the target system (target object).</para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>synchronization</glossterm>
 <glossdef>
  <para>The synchronization process creates, updates, or deletes objects on a 
  target system, based on the defined mappings from the source system. 
  Synchronization can be scheduled or on demand.</para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>system object</glossterm>
 <glossdef>
  <para>A pluggable representation of an object on an external system. For 
  example, a user entry that is stored in an external LDAP directory is 
  represented as a system object in OpenIDM for the period during which 
  OpenIDM requires access to that entry.System objects follow the same 
  RESTful resource-based design principles as managed objects.</para>
 </glossdef>
</glossentry>

<glossentry>
 <glossterm>target object</glossterm>
 <glossdef>
  <para>In the context of reconciliation, a target object is a data object on 
  the target system, that OpenIDM scans after locating its corresponding object 
  on the source system. Depending on the defined mapping, OpenIDM then adjusts 
  the target object to match the corresponding source object.</para>
 </glossdef>
</glossentry>
 
</glossary>
