<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2012-2014 ForgeRock AS
  !    
-->
<chapter xml:id='chap-repository'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
 http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Installing a Repository For Production</title>
  <indexterm>
   <primary>Repository database</primary>
   <secondary>Production ready</secondary>
  </indexterm>

 <para>By default, OpenIDM uses OrientDB for its internal repository so that you
 do not have to install a database in order to evaluate OpenIDM. Before using
 OpenIDM in production, however, you must replace OrientDB with a supported
 repository.</para>
 
 <para>OpenIDM <?eval ${docTargetVersion}?> supports the use of <link 
 xlink:href="http://dev.mysql.com/downloads/mysql/"
 xlink:show="new">MySQL</link>, MS SQL, and Oracle Database as an internal
 repository. For details of the supported versions, see <link
 xlink:href="release-notes#chap-before-you-install"
 xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Before You Install 
 OpenIDM Software</citetitle></link> in the <citetitle>Release Notes</citetitle>. 
 </para>

 <section xml:id="repository-mysql">
   <title>To Set Up OpenIDM With MySQL</title>

 <procedure>

  <para>
   After you have installed MySQL on the local host and <emphasis>before
   starting OpenIDM for the first time</emphasis>, set up OpenIDM to use the new
   repository, as described in the following sections.
  </para>
  <para>
   This procedure assumes that a password has already been set for the MySQL
   root user.
  </para>

  <step>
   <para>Download MySQL Connector/J, version 5.1 or later from the MySQL website.
   Unpack the delivery, and copy the .jar into the
   <filename>openidm/bundle</filename> directory.</para>
   <screen>$ cp mysql-connector-java-<replaceable>version</replaceable>-bin.jar /path/to/openidm/bundle/</screen>
  </step>
  <step>
   <para>Make sure that OpenIDM is stopped.</para>
   <screen>$ cd /path/to/openidm/
$ ./shutdown.sh
OpenIDM is not running, not stopping.</screen>
  </step>
  <step>
   <para>Remove <filename>openidm/conf/repo.orientdb.json</filename>.</para>
   <screen>$ cd /path/to/openidm/conf/
$ rm repo.orientdb.json</screen>
  </step>
  <step>
   <para>Copy <filename>openidm/samples/misc/repo.jdbc.json</filename> to the
   <filename>openidm/conf</filename> directory.</para>
   <screen>$ cd /path/to/openidm/conf
$ cp ../samples/misc/repo.jdbc.json .</screen>
  </step>
  <step>
   <indexterm>
    <primary>Repository database</primary>
    <secondary>Table names</secondary>
   </indexterm>
   <para>Import the data definition language script for OpenIDM into
   MySQL.</para>
   <screen>$ ./bin/mysql -u root -p &lt; /path/to/openidm/db/scripts/mysql/openidm.sql
Enter password:
$ </screen>
   <para>This step creates an <literal>openidm</literal> database for use
   as the internal repository, and a user <literal>openidm</literal> with 
   password <literal>openidm</literal> who has all the required privileges to 
   update the database.</para>
   <screen>$ cd /path/to/mysql
$ ./bin/mysql -u root -p 
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 18
Server version: 5.5.19 MySQL Community Server (GPL)
...
mysql&gt; use openidm;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
mysql&gt; show tables;
+---------------------------+
| Tables_in_openidm         |
+---------------------------+
| auditaccess               |
| auditactivity             |
| auditrecon                |
| clusterobjectproperties   |
| clusterobjects            |
| configobjectproperties    |
| configobjects             |
| genericobjectproperties   |
| genericobjects            |
| internaluser              |
| links                     |
| managedobjectproperties   |
| managedobjects            |
| objecttypes               |
| schedulerobjectproperties |
| schedulerobjects          |
| uinotification            |
+---------------------------+
17 rows in set (0.00 sec)</screen>
   <para>The table names are similar to those used with OrientDB.</para>
  </step>
  <step>
   <para>Update <filename>openidm/conf/repo.jdbc.json</filename> as necessary,
   to reflect your MySQL deployment.</para>
   <programlisting language="javascript">
"connection" : {
    "dbType" : "MYSQL",
    "jndiName" : "",
    "driverClass" : "com.mysql.jdbc.Driver",
    <emphasis role="strong">"jdbcUrl" : "jdbc:mysql://localhost:3306/openidm",
    "username" : "openidm",
    "password" : "openidm",</emphasis>
    "defaultCatalog" : "openidm",
    "maxBatchSize" : 100,
    "maxTxRetry" : 5,
    "enableConnectionPool" : true 
},</programlisting>
  </step>
 </procedure>

    <para>When you have set up MySQL for use as the OpenIDM internal repository,
    start OpenIDM to check that the setup has been successful. After startup,
    you should see that <literal>repo.jdbc</literal> is <literal>active</literal>,
    whereas <literal>repo.orientdb</literal> is <literal>unsatisfied</literal>.
    </para>

    <screen>$ cd /path/to/openidm
        $ ./startup.sh
        Using OPENIDM_HOME:   /path/to/openidm
        Using OPENIDM_OPTS:   -Xmx1024m
        Using LOGGING_CONFIG:
        -Djava.util.logging.config.file=/path/to/openidm/conf/logging.properties
        Using boot properties at /path/to/openidm/conf/boot/boot.properties
        -&gt; scr list
        Id   State          Name
        [  19] [active       ] org.forgerock.openidm.config.starter
        [  23] [active       ] org.forgerock.openidm.taskscanner
        [   8] [active       ] org.forgerock.openidm.external.rest
        [  12] [active       ] org.forgerock.openidm.provisioner.openicf.connectorinfoprovider
        [  15] [active       ] org.forgerock.openidm.ui.simple
        [   1] [active       ] org.forgerock.openidm.router
        [  22] [active       ] org.forgerock.openidm.scheduler
        [  14] [active       ] org.forgerock.openidm.restlet
        [   7] [unsatisfied  ] org.forgerock.openidm.external.email
        [  18] [unsatisfied  ] org.forgerock.openidm.repo.orientdb
        [   6] [active       ] org.forgerock.openidm.sync
        [   3] [active       ] org.forgerock.openidm.script
        [   5] [active       ] org.forgerock.openidm.recon
        [   2] [active       ] org.forgerock.openidm.scope
        [  10] [active       ] org.forgerock.openidm.http.contextregistrator
        [  20] [active       ] org.forgerock.openidm.config
        [   0] [active       ] org.forgerock.openidm.audit
        [  21] [active       ] org.forgerock.openidm.schedule
        [  17] [active       ] org.forgerock.openidm.repo.jdbc
        [  16] [active       ] org.forgerock.openidm.workflow
        [  13] [active       ] org.forgerock.openidm.provisioner.openicf
        [   4] [active       ] org.forgerock.openidm.managed
        [   9] [active       ] org.forgerock.openidm.authentication
        [  11] [active       ] org.forgerock.openidm.provisioner</screen>
 </section>

 <section xml:id="repository-mssql">
 <title>To Set Up OpenIDM With MS SQL</title>

 <procedure>
     <para>These instructions are specific to MS SQL Server 2008 R2 Express
     running on a local Windows XP system. Adapt the instructions for your
     environment.</para>

     <itemizedlist>
         <para>When you install MS SQL Server, note that OpenIDM has the
             following specific configuration requirements:</para>
         <listitem>
             <para>OpenIDM requires SQL Server authentication. During the
                 MS SQL Server installation, make sure that you select SQL
                 Server authentication and not just Windows authentication.
             </para>
         </listitem>
         <listitem>
             <para>During the Feature Selection installation step, make sure
                 that at least SQL Server Replication, Full Text Search, and
                 Management Tools - Basic are selected.</para>
             <para>These instructions require SQL Management Studio so make sure that
                 you include Management Tools in the installation.</para>
         </listitem>
         <listitem>
             <para>TCP/IP must be enabled and configured for the correct IP 
             address and port. To configure TCP/IP, follow these steps:</para>
             <orderedlist>
                 <listitem>
                     <para>Click Start > All Programs > MS SQL Server 2008 R2 >
                         Configuration Tools > SQL Server Configuration Manager</para>
                 </listitem>
                 <listitem>
                     <para>Expand the SQL Server Network Configuration item and select
                     "Protocols for SQLEXPRESS"</para>
                 </listitem>
                 <listitem>
                     <para>Double click TCP/IP and select Enabled > Yes</para>
                 </listitem>
                 <listitem>
                     <para>Select the IP Adresses tab and set the addresses and
                     ports on which the server will listen.</para>
                     <para>For this sample procedure, scroll down to IPAll and set
                     TCP Dynamic Ports to 1433 (the default port for MS SQL). </para>
                 </listitem>
                 <listitem>
                     <para>Click Apply, then OK.</para>
                 </listitem>
                 <listitem>
                     <para>Restart MS SQL Server for the configuration changes to
                     take effect. To restart the server, select SQL Server Services
                     in the left pane, double click SQL Server (SQLEXPRESS) and click
                     Restart.</para>
                 </listitem>
                 <listitem>
                     <para>If you have a firewall enabled, ensure that the port
                     you configured in the previous step is open for OpenIDM to
                     access MS SQL.</para>
                 </listitem>
             </orderedlist>
         </listitem>
     </itemizedlist>

     <para>After you have installed MS SQL on the local host, install OpenIDM,
     if you have not already done so, but <emphasis>do not start</emphasis>
     the OpenIDM instance. Import the data definition and set up OpenIDM to
     use the new repository, as described in the following steps.</para>

     <step>
         <para>Use SQL Management Studio to import the data definition language
             script for OpenIDM into MS SQL.</para>
         <substeps>
             <step>
                 <para>Click Start > All Programs > MS SQL Server 2008 R2 >
                     SQL Server Management Studio</para>
             </step>
             <step>
                 <para>On the Connect to Server panel, select SQL Server
                 Authentication from the Authentication drop down list and log
                 in as the current user (for example, Administrator).</para>
             </step>
             <step>
                 <para>Select File > Open > File and navigate to the OpenIDM
                 data definition language script (
                 <filename>path\to\openidm\db\scripts\mssql\openidm.sql</filename>).
                 Click Open to open the file.</para>
             </step>
             <step>
                 <para>Click Execute to run the script.</para>
             </step>
         </substeps>
     </step>
     <step>
         <para>This step creates an <literal>openidm</literal> database for use
         as the internal repository, and a user <literal>openidm</literal> with
         password <literal>Passw0rd</literal> who has all the required privileges
         to update the database. You might need to refresh the view in SQL Server
         Management Studio to see the <literal>openidm</literal> database in the
         Object Explorer.</para>
         <para>Expand Databases > openidm > Tables. You should see the following
         tables in the openidm database:</para>
         <mediaobject>
             <alt>Default tables in the openidm MS SQL database</alt>
             <imageobject>
                 <imagedata fileref="images/sql-tables.png" format="PNG" />
             </imageobject>
         </mediaobject>
         <para>The table names are similar to those used with OrientDB.</para>
         </step>
     <step>
         <para>OpenIDM requires an MS SQL driver that must be created from two
         separate jar files. Create the driver as follows.</para>
         <substeps>
             <step>
                 <para>Download the JDBC Driver 4.0 for SQL Server
                 (<filename>sqljdbc_4.0.2206.100_enu.tar.gz</filename>) from
                 <link xlink:href="http://www.microsoft.com/en-us/download/details.aspx?id=11774"
                 >Microsoft's download site</link>.
                 The precise URL may vary, depending on your location.</para>
                 <para>Extract the executable Java archive file
                 (<filename>sqljdbc4.jar</filename>) from the zip file, using
                 7-zip or an equivalent file management application.</para>
                 <para>Copy the file to <filename>openidm\db\scripts\mssql</filename>.</para>
             </step>
             <step>
                 <para>Download the <literal>bnd</literal> Java archive file
                 (<filename>biz.aQute.bnd.jar</filename>) that enables you
                 to create OSGi bundles. The file can be downloaded from
                 <link xlink:href="http://dl.dropbox.com/u/2590603/bnd/biz.aQute.bnd.jar" />. For
                 more information about <literal>bnd</literal>, see
                 <link xlink:href="http://www.aqute.biz/Bnd/Bnd" />.
                 </para>
                 <para>Copy the file to <filename>openidm\db\scripts\mssql</filename>.</para>
             </step>
             <step>
                 <para>Your <filename>openidm\db\scripts\mssql</filename> directory
                 should now contain the following files:</para>
                 <screen>.\> ls \path\to\openidm\db\scripts\mssql
 biz.aQute.bnd.jar  openidm.sql  sqljdbc4.bnd  sqljdbc4.jar
                 </screen>
             </step>
             <step>
                 <para>Bundle the two jar files together with the following
                 command:</para>
                 <screen>C:\> cd \path\to\openidm\db\scripts\mssql
./> java -jar biz.aQute.bnd.jar wrap -properties sqljdbc4.bnd sqljdbc4.jar</screen>
                 <para>This step creates a single <literal>.bar</literal> file,
                 named <filename>sqljdbc4.bar</filename>.</para>
             </step>
             <step>
                 <para>Rename the <filename>sqljdbc4.bar</filename> file to
                 <filename>sqljdbc4-osgi.jar</filename> and copy it to the
                 <filename>openidm\bundle</filename> directory.</para>
                 <screen>./> mv sqljdbc4.bar sqljdbc4-osgi.jar
./> cp sqljdbc4-osgi.jar \path\to\openidm\bundle</screen>
             </step>
         </substeps>
     </step>
     <step>
         <para>Remove the default OrientDB repository configuration file
         (<filename>openidm\conf\repo.orientdb.json</filename>) from the
         configuration directory.</para>
         <screen>C:\> cd \path\to\openidm\conf\
.\> del repo.orientdb.json</screen>
     </step>
     <step>
         <para>Copy the repository configuration file for MS SQL
         (<filename>openidm\samples\misc\repo.jdbc.json</filename>) to the
         configuration directory.</para>
         <screen>C:\> cd \path\to\openidm\conf\
.\> cp ..\samples\misc\repo.jdbc-mssql.json .</screen>
     </step>
     <step>
         <para>Rename the MS SQL repository configuration file to
         <filename>repo.jdbc.json</filename>.</para>
         <screen>.\> mv repo.jdbc-mssql.json repo.jdbc.json</screen>
     </step>
     <step>
         <para>Update <filename>openidm\conf\repo.jdbc.json</filename> as necessary,
             to reflect your MS SQL deployment.</para>
         <programlisting language="javascript">
{
    "connection" : {
        "dbType" : "SQLSERVER",
        "jndiName" : "",
        "driverClass" : "com.microsoft.sqlserver.jdbc.SQLServerDriver",
        "jdbcUrl" : "jdbc:sqlserver://localhost:1433;instanceName=default;
                     databaseName=openidm;applicationName=OpenIDM",
        "username" : "openidm",
        "password" : "Passw0rd",
        "defaultCatalog" : "openidm",
        "maxBatchSize" : 100,
        "maxTxRetry" : 5,
        "enableConnectionPool" : true
    },
...
         </programlisting>
         <para>Specifically, check that the port matches what you have configured
         in MS SQL.
         </para>
     </step>
 </procedure>

    <para>
     When you have completed the preceding steps, start OpenIDM to check that
     the setup has been successful. After startup, you should see that
     <literal>repo.jdbc</literal> is <literal>active</literal>, whereas
     <literal>repo.orientdb</literal> is <literal>unsatisfied</literal>.
    </para>

    <screen>C:> cd \path\to\openidm
./> startup.bat
"Using OPENIDM_HOME:   \path\to\openidm"
"Using OPENIDM_OPTS:   -Xmx1024m"
"Using LOGGING_CONFIG:
-Djava.util.logging.config.file=\path\to\openidm\conf\logging.properties"
Using boot properties at \path\to\openidm\conf\boot\boot.properties
-&gt; scr list
Id   State          Name
[ 19] [active      ] org.forgerock.openidm.config.starter
[ 23] [active      ] org.forgerock.openidm.taskscanner
[  8] [active      ] org.forgerock.openidm.external.rest
[ 12] [active      ] org.forgerock.openidm.provisioner.openicf.connectorinfoprovider
[ 15] [active      ] org.forgerock.openidm.ui.simple
[  1] [active      ] org.forgerock.openidm.router
[ 22] [active      ] org.forgerock.openidm.scheduler
[ 14] [active      ] org.forgerock.openidm.restlet
[  7] [unsatisfied ] org.forgerock.openidm.external.email
[ 18] [unsatisfied ] org.forgerock.openidm.repo.orientdb
[  6] [active      ] org.forgerock.openidm.sync
[  3] [active      ] org.forgerock.openidm.script
[  5] [active      ] org.forgerock.openidm.recon
[  2] [active      ] org.forgerock.openidm.scope
[ 10] [active      ] org.forgerock.openidm.http.contextregistrator
[ 20] [active      ] org.forgerock.openidm.config
[  0] [active      ] org.forgerock.openidm.audit
[ 21] [active      ] org.forgerock.openidm.schedule
[ 17] [active      ] org.forgerock.openidm.repo.jdbc
[ 16] [active      ] org.forgerock.openidm.workflow
[ 13] [active      ] org.forgerock.openidm.provisioner.openicf
[  4] [active      ] org.forgerock.openidm.managed
[  9] [active      ] org.forgerock.openidm.authentication
[ 11] [active      ] org.forgerock.openidm.provisioner</screen>
 </section>


 <section xml:id="repository-oracledb">
 <title>To Set Up OpenIDM With Oracle Database</title>

 <procedure>

  <para>This procedure assumes that Oracle Database has been installed and
  configured on the local host.</para>

  <para>OpenIDM listens on port 8080 by default. To avoid a port conflict,
  make sure that Oracle Database is configured to use a different port, or
  edit the <filename>/path/to/openidm/conf/boot/boot.properties</filename>
  file to change the port on which OpenIDM listens.</para>

  <step>
      <para>Connect to the Oracle Database with any database connection utility.
      For more information, see <link xlink:show="new"
      xlink:href="http://docs.oracle.com/cd/B25329_01/doc/admin.102/b25107/connecting.htm"
      >Connecting to the Database</link>.</para>
      <para>This example uses SQL Command Line (SQL*Plus) to connect as the
      <literal>SYSTEM</literal> user.</para>
      <screen>$ sqlplus /nolog
SQL&gt; connect SYSTEM/password
Connected.
      </screen>
  </step>
  <step>
      <para>Create a user that will have permission to connect to the
      OpenIDM database tables.</para>
      <para>The following example creates a user <literal>openidm</literal>
      with password <literal>password</literal>.</para>
      <screen>SQL&gt; CREATE USER openidm IDENTIFIED BY password;
User created.</screen>
  </step>
  <step>
      <para>Grant the new user at least the <literal>CREATE SESSION</literal>
      and <literal>RESOURCE</literal> privileges, to allow that user to connect
      to the database and create the required tables.</para>
      <screen>SQL&gt; GRANT CREATE SESSION TO openidm;
Grant succeeded.
SQL&gt; GRANT RESOURCE TO openidm;
Grant succeeded.</screen>
  </step>
  <step>
      <para>Connect to the database as the <literal>openidm</literal> user.</para>
      <screen>SQL&gt; connect openidm/password;
Connected.
      </screen>
  </step>
  <step>
      <para>Import the OpenIDM data definition language script for OpenIDM
      into Oracle Database.</para>
      <screen>SQL&gt; @/root/openidm/db/scripts/oracle/openidm.sql
Creating Sequence genericobjects_id_SEQ ...

Sequence created.
...</screen>
      <para>This step creates all of the required database tables for use as
      the internal repository.</para>
  </step>
  <step>
      <para>Check that the tables have been created correctly by querying the
      <literal>internaluser</literal> table. The query should return two
      records (<literal>openidm-admin</literal> and <literal>anonymous</literal>).
      The output here has been formatted for legibility.</para>
      <screen>SQL&gt; select * from internaluser;

OBJECTID     openidm-admin
-----------------------------------------------------------------------------
REV          0
-----------------------------------------------------------------------------
PWD          openidm-admin
-----------------------------------------------------------------------------
ROLES        openidm-admin,openidm-authorized
-----------------------------------------------------------------------------

OBJECTID     anonymous
-----------------------------------------------------------------------------
REV          0
-----------------------------------------------------------------------------
PWD          anonymous
-----------------------------------------------------------------------------
ROLES        openidm-reg
-----------------------------------------------------------------------------</screen>
  </step>
  <step>
      <para>Make sure that OpenIDM is stopped.</para>
      <screen>$ cd /path/to/openidm/
$ ./shutdown.sh
OpenIDM is not running, not stopping.</screen>
  </step>
  <step>
    <para>OpenIDM requires an Oracle DB driver that must be created from two
    separate jar files. Create the driver as follows.</para>
    <substeps>
       <step>
           <para>Download the Oracle JDBC driver for your Oracle DB version
           from <link
           xlink:show="new" xlink:href="http://www.oracle.com/technetwork/database/features/jdbc/index-091264.html"
           >Oracle Technetwork</link> and place it in the <filename>openidm/db/scripts/oracle</filename>
           directory.</para>
           <screen>$ ls /path/to/openidm/db/scripts/oracle
ojdbc6_g.jar
</screen>
       </step>
       <step>
           <para>Create a bind file and edit it to match the version information
           for your JDBC driver.</para>
           <para>You can use the sample bind file located in
           <filename>openidm/db/scripts/mssql/</filename>. Copy the bind file
           to the same location as the JDBC driver.</para>
           <screen>$ cd /path/to/openidm/db/scripts
$ cp mssql/sqljdbc4.bnd oracle/
$ ls oracle/
ojdbc6_g.jar  sqljdbc4.bnd</screen>
           <para>The JDBC driver version information for your driver is located
           in the <literal>Specification-Version</literal> property in the
           MANIFEST file of the driver.</para>
           <screen>$ cd /path/to/openidm/db/scripts/oracle
$ unzip -q -c ojdbc6_g.jar META-INF/MANIFEST.MF
...
Specification-Vendor: Sun Microsystems Inc.
Specification-Title: JDBC
Specification-Version: 4.0
...</screen>
           <para>Edit the bind file to match the JDBC driver version.</para>
           <screen>$ more sqljdbc4.bnd
...
version=4.0
Export-Package: *;version=${version}
Bundle-Name: Oracle JDBC Driver 4.0 for SQL Server
Bundle-SymbolicName: Oracle JDBC Driver 4.0 for SQL Server
Bundle-Version: ${version}</screen>
       </step>
       <step>
           <para>Download the <literal>bnd</literal> Java archive file
           (<filename>biz.aQute.bnd.jar</filename>) that enables you to create
           OSGi bundles. The file can be downloaded from
           <link xlink:show="new" xlink:href="http://dl.dropbox.com/u/2590603/bnd/biz.aQute.bnd.jar" />.
           For more information about <literal>bnd</literal>, see
           <link xlink:show="new" xlink:href="http://www.aqute.biz/Bnd/Bnd" />.</para>
           <para>Place the <literal>bnd</literal> Java archive file in the same
           directory as the JDBC driver, and the bind file.</para>
           <screen>$ ls /path/to/openidm/db/scripts/oracle/
biz.aQute.bnd.jar  ojdbc6_g.jar  sqljdbc4.bnd</screen>
       </step>
       <step>
           <para>Change to the directory in which the three files are located and
           run the following command to create the OSGi bundle.</para>
           <screen>$ cd /path/to/openidm/db/scripts/oracle/
$ java -jar biz.aQute.bnd.jar wrap -properties sqljdbc4.bnd ojdbc6_g.jar
Dec 10, 2013 9:53:28 AM java.util.prefs.FileSystemPreferences$1 run
INFO: Created user preferences directory.
ojdbc6_g 984 0</screen>
           <para>A new <literal>.bar</literal> file has now been created.</para>
           <screen>$ ls
biz.aQute.bnd.jar  ojdbc6_g.bar  ojdbc6_g.jar  sqljdbc4.bnd</screen>
       </step>
       <step>
           <para>Move the <literal>.bar</literal> file to the
           <literal>openidm/bundle</literal> directory and rename it with a
           <literal>.jar</literal> extension. The actual name of the file is
           unimportant.</para>
           <screen>$ mv ojdbc6_g.bar /path/to/openidm/bundle/ojdbc6_g-osgi.jar</screen>
       </step>
   </substeps>
  </step>
  <step>
   <para>Remove the default OrientDB configuration file
   (<filename>openidm/conf/repo.orientdb.json</filename>) from the
   configuration directory.</para>
   <screen>$ rm /path/to/openidm/conf/repo.orientdb.json</screen>
  </step>
  <step>
   <para>Copy the OracleDB configuration file
   (<filename>openidm/samples/misc/repo.jdbc-oracle.json</filename>) to the
   configuration directory and rename the file <filename>repo.jdbc.json</filename>.</para>
   <screen>$ cd /path/to/openidm/conf
$ cp ../samples/misc/repo.jdbc-oracle.json repo.jdbc.json</screen>
  </step>
  <step>
   <para>Update <filename>openidm/conf/repo.jdbc.json</filename> as necessary,
   to reflect your OracleDB deployment. Specifically, edit the <literal>jdbcUrl</literal>,
   <literal>username</literal>, and <literal>password</literal> properties. For
   example:</para>
   <programlisting language="javascript">{
    "connection" : {
        "dbType" : "ORACLE",
        "jndiName" : "",
        "driverClass" : "oracle.jdbc.OracleDriver",
        "jdbcUrl" : "jdbc:oracle:thin:@//localhost:1521/XE",
        "username" : "openidm",
        "password" : "password",
        "maxBatchSize" : 100,
        "maxTxRetry" : 5,
        "connectionTimeoutInMs" : 30000
    },</programlisting>
  </step>
 </procedure>

    <para>When you have set up OracleDB for use as the OpenIDM internal
    repository, start OpenIDM to check that the setup has been successful. On
    startup, a number of INFO messages are output, as the predefined queries
    are processed.</para>
    <para>After startup, you should see that <literal>repo.jdbc</literal> is
    <literal>active</literal>, whereas <literal>repo.orientdb</literal> is
    <literal>unsatisfied</literal>.
    </para>

    <screen>$ cd /path/to/openidm
$ ./startup.sh
Using OPENIDM_HOME:   /path/to/openidm
Using OPENIDM_OPTS:   -Xmx1024m
Using LOGGING_CONFIG:
-Djava.util.logging.config.file=/path/to/openidm/conf/logging.properties
Using boot properties at /path/to/openidm/conf/boot/boot.properties
....
-&gt; scr list
   Id   State          Name
...
[   2] [unsatisfied  ] org.forgerock.openidm.repo.orientdb
...
[   3] [active       ] org.forgerock.openidm.repo.jdbc
...</screen>
  </section>

</chapter>
