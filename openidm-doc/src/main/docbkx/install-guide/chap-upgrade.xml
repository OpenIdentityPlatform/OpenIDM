<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START!
! This work is licensed under the Creative Commons
! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
! To view a copy of this license, visit
! http://creativecommons.org/licenses/by-nc-nd/3.0/
! or send a letter to Creative Commons, 444 Castro Street,
! Suite 900, Mountain View, California, 94041, USA.
!
! You can also obtain a copy of the license at
! legal/CC-BY-NC-ND.txt.
! See the License for the specific language governing permissions
! and limitations under the License.
!
! If applicable, add the following below this CCPL HEADER, with the fields
! enclosed by brackets "[]" replaced with your own identifying information:
!      Portions Copyright [yyyy] [name of copyright owner]
!
! CCPL HEADER END
!
!      Copyright 2011-2015 ForgeRock AS
!
-->
<chapter xml:id='chap-upgrade'
  xmlns='http://docbook.org/ns/docbook'
  version='5.0' xml:lang='en'
  xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
  xsi:schemaLocation='http://docbook.org/ns/docbook
  http://docbook.org/xml/5.0/xsd/docbook.xsd'
  xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>Migrating to OpenIDM ${docTargetVersion}</title>

 <para>
  The migration process is largely dependent on your particular deployment and
  on the extent to which you have customized OpenIDM. We recommend that you
  engage ForgeRock services for help in migrating an existing deployment.
 </para>
 <para>
  This process assumes that you are migrating a deployment from OpenIDM 3.1 to
  OpenIDM ${docTargetVersion}. For information on migrating a deployment from
  OpenIDM 3.0.0 to 3.1.0, see <link
  xlink:href="http://docs.forgerock.org/en/openidm/3.1.0/install-guide#chap-upgrade"
  xlink:show="new"><citetitle>Migrating to OpenIDM 3.1.0</citetitle></link> in
  the <citetitle>OpenIDM 3.1.0 Installation Guide</citetitle>. For information on
  migrating a deployment from OpenIDM  2.1.0 to 3.0.0, see
  <link xlink:href="http://docs.forgerock.org/en/openidm/3.0.0/install-guide#chap-upgrade"
  xlink:show="new"><citetitle>Migrating to OpenIDM 3.0.0</citetitle></link> in
  the <citetitle>OpenIDM 3.0.0 Installation Guide</citetitle>.
 </para>
 <para>
  The steps outlined in this section indicate how to preserve customizations,
  where possible, and take advantage of the new functionality offered in this
  release. However, you must be aware of the changes made in
  OpenIDM ${docTargetVersion} that might affect your existing deployment.
  Therefore, before starting this process, see the <link xlink:show="new"
  xlink:href="release-notes#chap-compatibility"
  xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Compatibility
  chapter</citetitle></link> in the Release Notes, and adjust your scripts and
  clients accordingly.
 </para>

 <procedure>
  <para>
   To perform a basic migration to OpenIDM ${docTargetVersion}, follow these
   steps. For the purposes of this procedure, the path to the existing 3.1.0
   instance is defined as <filename>/path/to/openidm-3.1</filename>. The path to
   the new instance is defined as <filename>/path/to/openidm-3.2</filename>.
  </para>
  <step>
   <para>
    Download and extract the OpenIDM ${docTargetVersion} server.
   </para>
  </step>
  <step>
   <para>
    Stop your existing OpenIDM 3.1.0 server, if it is running.
   </para>
   <screen>
$ cd /path/to/openidm-3.1
$ ./shutdown.sh
Stopping OpenIDM (81491)
   </screen>
  </step>
  <step>
   <para>
    Back up your existing deployment by archiving the entire
    <filename>openidm</filename> directory.
   </para>
  </step>
  <step>
   <para>
    On the OpenIDM ${docTargetVersion} server, edit the
    <filename>conf/boot/boot.properties</filename> file to match any
    customizations that you made on your OpenIDM 3.1.0 server. Specifically,
    check the following elements:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      The HTTP, HTTPS, and mutual authentication ports are specified in the
      <filename>conf/boot/boot.properties</filename> file. If you changed the
      default ports in your OpenIDM 3.1.0 deployment, make sure that the
      corresponding ports are specified in this file.
     </para>
    </listitem>
    <listitem>
     <para>
      Check that the keystore and truststore passwords match the current
      passwords for the keystore and truststore of your OpenIDM 3.1.0
      deployment.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    Depending on the level of customization you have made in your current
    deployment, it might be simpler to start with your OpenIDM 3.1.0
    <filename>boot.properties</filename> file, and copy all new settings from
    that file to the version associated with OpenIDM ${docTargetVersion}.
    However, as a best practice, you should keep all configuration
    customizations (including new properties and changed settings) in a single
    location in your configuration files. You can then copy and paste these
    changes as appropriate.
   </para>
  </step>
  <step>
   <para>
    Copy the contents of your original <literal>security/</literal> folder to
    the new instance.
   </para>
   <screen>$ cd /path/to/openidm-3.2
$ cp -r /path/to/openidm-3.1/security .
   </screen>
   <para>
    You must modify the <filename>boot.properties</filename> file for your
    project to point to the relative location of your
    <filename>keystore.jceks</filename> and <filename>truststore</filename>
    security files.
   </para>
   <para>
    For example, if your <filename>security/</filename> folder is located at
    <filename>/path/to/openidm-3.2/myproject/security</filename>, edit the
    <filename>boot.properties</filename> file as follows:
    <screen><userinput>$ less /path/to/openidm/myproject/conf/boot/boot.properties</userinput>
<computeroutput>...
openidm.keystore.type=JCEKS
openidm.truststore.type=JKS
openidm.keystore.provider=
openidm.keystore.location=myproject/security/keystore.jceks
openidm.truststore.location=myproject/security/truststore</computeroutput></screen>
   </para>
   <para>
    OpenIDM automatically prepends the locations of the
    <filename>keystore.jceks</filename> and <filename>truststore</filename>
    files with the installation directory.
   </para>
  </step>
  <step>
   <para>
    Migrate any custom scripts or default scripts that you have modified to the
    scripts directory of your OpenIDM ${docTargetVersion} instance. In general,
    custom and customized scripts should be located in the
    <filename>openidm-3.1/script</filename> directory on the OpenIDM 3.1.0
    deployment.
   </para>
   <itemizedlist>
    <listitem>
     <para>
      For custom scripts, review the <link xlink:show="new"
      xlink:href="release-notes#chap-compatibility"
      xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Compatibility
      chapter</citetitle></link> to ensure that the scripts will work as
      intended with the new version, then copy these scripts to the new
      instance. For example:
     </para>
     <screen>$ cd /path/to/openidm-3.2
$ cp /path/to/openidm-3.1/script/my-custom-script.js script/
     </screen>
    </listitem>
    <listitem>
     <para>
      If you modified an existing OpenIDM 3.1.0 script, compare that modified
      script against the corresponding script in OpenIDM ${docTargetVersion}. If
      nothing has changed in the default script, check that your customizations
      will work as intended (by reviewing the <link xlink:show="new"
      xlink:href="release-notes#chap-compatibility"
      xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Compatibility
      chapter</citetitle></link>) then copy the customized scripts to the new
      <literal>openidm/script</literal> directory. For example:
     </para>
     <screen>$ cd /path/to/openidm-3.2
$ cp /path/to/openidm-3.1/script/policy.js script/
     </screen>
    </listitem>
    <listitem>
     <para>
      If a default script has changed since the 3.1.0 release, copy the modified
      script to the <filename>openidm-3.2/script</filename> directory. For
      example:
     </para>
     <screen>$ cd /path/to/openidm-3.1
$ cp bin/default/script/linkedView.js script/
     </screen>
     <para>
      Check that your customizations will work as expected, then port your
      customizations to the new script in the
      <filename>openidm-3.2/script</filename> directory.
     </para>
    </listitem>
   </itemizedlist>
  </step>
  <step>
   <para>
    Some changes have been made to the default configuration in OpenIDM
    ${docTargetVersion}. Currently, there is no automated way to migrate a
    customized configuration to the new version. The following strategy is
    recommended:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      Start with the default 3.1.0 configuration.
     </para>
    </listitem>
    <listitem>
     <para>
      For each configuration file that you have customized, use a file
      comparison tool such as the UNIX <command>diff</command> utility to assess
      the differences between your customized file and the ${docTargetVersion}
      file.
     </para>
    </listitem>
    <listitem>
     <para>
      Based on the results of the <command>diff</command>, use either your
      existing file as a base and port the ${docTargetVersion} changes to that
      file, or vice versa. Ultimately, you want to preserve your customizations
      but ensure that you are up to date with the latest default configuration.
      All files should end up in the <filename>openidm-3.2/conf</filename>
      directory.
     </para>
    </listitem>
    <listitem>
     <para>
      Pay particular attention to the <filename>conf/repo.jdbc.json</filename>
      file in your existing deployment.
      If you have customized this file, make sure that these customizations are
      ported to the corresponding file in the ${docTargetVersion} deployment.
      For example, if you have defined any new queries, add these queries to the
      OpenIDM ${docTargetVersion} instance of the
      <filename>repo.jdbc.json</filename> file.
     </para>
    </listitem>
   </itemizedlist>
  </step>
  <step>
   <para>
    Modify any customized provisioner configurations in your existing project to
    point to the connectors that are provided with OpenIDM ${docTargetVersion}.
    Specifically, check that the <literal>"connectorRef"</literal> properties
    reflect the new connectors, where applicable. For example:
   </para>
   <programlisting language="javascript">{
    "bundleName": "org.forgerock.openicf.connectors.ldap-connector",
    "bundleVersion": "[1.4.0.0,2.0.0.0)",
    "displayName": "LDAP Connector",
    "connectorName": "org.identityconnectors.ldap.LdapConnector"
}, </programlisting>
   <para>
    Alternatively, copy the connector .jars from your existing installation into
    the <literal>openidm/connectors/</literal> folder of the new installation.
   </para>
   <para>
    For more information, see <link xlink:show="new"
    xlink:href="release-notes#compatibility-idm3-icf4"
    xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Integration of
    OpenICF 1.4.0.0</citetitle></link> in the <citetitle>Compatibility</citetitle>
    chapter of the <citetitle>Release Notes</citetitle>.
   </para>
  </step>
  <step>
   <para>
    Complete the OpenIDM ${docTargetVersion} installation, as described in the
    <link xlink:show="new" xlink:href="install-guide#chap-install"
    xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Installation
    chapter</citetitle></link>.
   </para>
  </step>
  <step>
   <para>
    Migrate your internal user data, managed objects, and reconciliation and
    audit data, if required.
   </para>
   <!--TODO check the corresponding changes on release of 3.2
   <para>
    When you migrate this data, note the following points:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      The database schema has changed slightly for OpenIDM 3.1.0:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        The <literal>auditsync</literal> table has been added.
       </para>
      </listitem>
      <listitem>
       <para>
        The <literal>reconaction</literal> column has been added to the
        <literal>auditrecon</literal> table.
       </para>
      </listitem>
      <listitem>
       <para>
        The <literal>userid</literal> column has been added to the
        <literal>auditaccess</literal> table.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </itemizedlist>    -->
   <para>
    Your data migration strategy might vary, depending on your repository. You
    can either migrate your existing 3.1.0 database, or start with a new
    ${docTargetVersion} database and import your existing data.
   </para>
   <itemizedlist>
    <para>
     To migrate an existing database:
    </para>
    <listitem>
     <para>
      Using the appropriate schema script from the OpenIDM ${docTargetVersion}
      instance
      (<filename>/path/to/openidm-3.2/db/<replaceable>repo</replaceable>/scripts/openidm.sql</filename>),
      take the changes described above and apply them to your existing database.
     </para>
     <para>
      Use the <literal>--force</literal> option in MySQL (or an equivalent
      option for your repository type) to create any new tables.
     </para>
    </listitem>
   </itemizedlist>
   <itemizedlist>
    <para>
     To start with a new database:
    </para>
    <listitem>
     <para>
      Set up a clean repository, using the appropriate schema script from the
      new OpenIDM ${docTargetVersion} instance
      (<filename>/path/to/openidm-3.2/db/<replaceable>repo</replaceable>/scripts/openidm.sql</filename>).
     </para>
    </listitem>
    <listitem>
     <para>
      Use a schema comparison tool and adjust the tables in your existing
      repository to match the schema in the new repository.
     </para>
    </listitem>
    <listitem>
     <para>
      Export your existing data to the new repository.
     </para>
    </listitem>
   </itemizedlist>
  </step>
  <step>
   <para>
    If you are using the UI, clear your browser cache after the migration.
    The browser cache contains files from the previous OpenIDM release, that
    might not be refreshed when you log into the new UI.
   </para>
  </step>
  <step>
   <para>
    Start up OpenIDM ${docTargetVersion}.
   </para>
   <screen>$ cd /path/to/openidm-3.2
$ ./startup.sh
   </screen>
  </step>
  <step>
   <para>
    Test that your existing clients and scripts are working as intended.
   </para>
  </step>
 </procedure>
</chapter>