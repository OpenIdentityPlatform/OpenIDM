<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! legal/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011 ForgeRock AS
  !    
-->
<chapter xml:id="chap-scripting"
 version="5.0"
 xml:lang="en"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:xinclude="http://www.w3.org/2001/XInclude">
 <title>Scripting</title>

  <para>Scripting lets you customize how OpenIDM works in various ways, such
  as providing custom logic between source and target mappings, defining
  correlation rules, filters, and triggers.</para>

 <section xml:id="scripting-configuration">
  <title>Configuration</title>

  <para>You define scripts using script objects, which can either include the
  code directly in the configuration, or call an external file containing the
  script.</para>
 
  <programlisting language="javascript">{
  "type"  : "text/javascript",
  "source": <replaceable>string</replaceable>
}</programlisting>

  <para>or</para>

  <programlisting language="javascript">{
  "type"  : "text/javascript",
  "file"  : <replaceable>file location</replaceable>
}</programlisting>

  <variablelist>
   <varlistentry>
    <term>type</term>
    <listitem>
     <para>string, required</para>
     <para>Specifies the type of script to be executed. Currently, OpenIDM
     supports only <literal>"text/javascript"</literal>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>source</term>
    <listitem>
     <para>string, required if file is not specified</para>
     <para>Specifies the source code of the script to be executed.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>file</term>
    <listitem>
     <para>string, required if source is not specified</para>
     <para>Specifies the file containing the source code of the script to
     execute.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>

 <section xml:id="scripting-example">
  <title>Examples</title>

  <para>The following example returns <literal>true</literal> if the
  <literal>employeeType</literal> is equal to <literal>external</literal>,
  otherwise returns <literal>false</literal>. This script can be useful during
  reconciliation to establish whether the source object should be a part of
  the reconciliation, or ignored.</para>

  <programlisting language="javascript">"validTarget": {
  "type"  : "text/javascript",
  "source": "object.employeeType == 'external'"
}</programlisting>

  <para>The following example sets the <literal>__PASSWORD__</literal>
  attribute to <literal>defaultpwd</literal> when OpenIDM creates a target
  object.</para>

  <programlisting language="javascript">"onCreate" : {
  "type"  : "text/javascript",
  "source": "target.__PASSWORD__ = 'defaultpwd'"
}</programlisting>

  <para>This example shows how to define a trigger to create Solaris home
  directories using a script. The script is located in a file,
  <filename>/path/to/openidm/script/createUnixHomeDir.js</filename>.</para>

  <programlisting language="javascript">{
  "filters" : [ {
      "pattern" : "^system/solaris/account$",
      "methods" : [ "create" ],
      "onResponse" : {
        "type" : "text/javascript",
        "file" : "script/createUnixHomeDir.js"
      }
  } ]
}</programlisting>
 </section>
</chapter>
