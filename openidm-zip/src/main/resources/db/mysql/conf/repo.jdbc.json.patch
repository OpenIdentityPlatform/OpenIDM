[
    {
        "operation" : "add",
        "field" : "/commands/explicitTables/delete-mapping-links",
        "value" : "DELETE FROM ${_dbSchema}.${_table} WHERE linktype = ${mapping}"
    },
    {
        "operation" : "remove",
        "field" : "/resourceMapping/explicitMapping/security"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/credential-query",
        "value" : "SELECT fullobject FROM ${_dbSchema}.${_mainTable} obj INNER JOIN ${_dbSchema}.objecttypes objtype ON objtype.id = obj.objecttypes_id AND objtype.objecttype = ${_resource} INNER JOIN ${_dbSchema}.${_propTable} usernameprop ON obj.id = usernameprop.${_mainTable}_id AND usernameprop.propkey='/userName' INNER JOIN ${_dbSchema}.${_propTable} statusprop ON obj.id = statusprop.${_mainTable}_id AND statusprop.propkey='/accountStatus' WHERE usernameprop.propvalue = ${username} AND statusprop.propvalue = 'active'"
    },
    {
        "operation" : "move",
        "from" : "/resourceMapping/explicitMapping/audit%2Fconfig/objectToColumn/runas",
        "field" : "/resourceMapping/explicitMapping/audit%2Fconfig/objectToColumn/runAs"
    },
    {
        "operation" : "add",
        "field" : "/resourceMapping/explicitMapping/audit%2Faccess/objectToColumn/response%2Fdetail",
        "value" : {"column" : "response_detail", "type" : "JSON_MAP"}
    },
    {
        "operation" : "add",
        "field" : "/queries/genericTables/find-relationship-edges",
        "value" : "SELECT obj.* FROM ${_dbSchema}.relationships obj INNER JOIN ${_dbSchema}.relationshipproperties firstId ON firstId.relationships_id = obj.id AND firstId.propkey = '/firstId' INNER JOIN ${_dbSchema}.relationshipproperties firstPropertyName ON firstPropertyName.relationships_id = obj.id AND firstPropertyName.propkey = '/firstPropertyName' INNER JOIN ${_dbSchema}.relationshipproperties secondId ON secondId.relationships_id = obj.id AND secondId.propkey = '/secondId' INNER JOIN ${_dbSchema}.relationshipproperties secondPropertyName ON secondPropertyName.relationships_id = obj.id AND secondPropertyName.propkey = '/secondPropertyName' WHERE ((firstId.propvalue = ${vertex1Id} AND firstPropertyName.propvalue = ${vertex1FieldName}) AND (secondId.propvalue = ${vertex2Id} AND secondPropertyName.propvalue = ${vertex2FieldName})) UNION ALL SELECT obj.* FROM ${_dbSchema}.relationships obj INNER JOIN ${_dbSchema}.relationshipproperties firstId ON firstId.relationships_id = obj.id AND firstId.propkey = '/firstId' INNER JOIN ${_dbSchema}.relationshipproperties firstPropertyName ON firstPropertyName.relationships_id = obj.id AND firstPropertyName.propkey = '/firstPropertyName' INNER JOIN ${_dbSchema}.relationshipproperties secondId ON secondId.relationships_id = obj.id AND secondId.propkey = '/secondId' INNER JOIN ${_dbSchema}.relationshipproperties secondPropertyName ON secondPropertyName.relationships_id = obj.id AND secondPropertyName.propkey = '/secondPropertyName' WHERE ((firstId.propvalue = ${vertex2Id} AND firstPropertyName.propvalue = ${vertex2FieldName}) AND (secondId.propvalue = ${vertex1Id} AND secondPropertyName.propvalue = ${vertex1FieldName}))"
    },
    {
        "operation" : "replace",
        "field" : "/queries/genericTables/find-relationships-for-resource",
        "value" : "SELECT obj.* FROM ${_dbSchema}.relationships obj INNER JOIN ${_dbSchema}.relationshipproperties firstId ON (firstId.relationships_id = obj.id AND firstId.propkey = '/firstId' AND firstId.propvalue = ${fullResourceId}) INNER JOIN ${_dbSchema}.relationshipproperties firstPropertyName ON (firstPropertyName.relationships_id = obj.id AND firstPropertyName.propkey = '/firstPropertyName' AND firstPropertyName.propvalue = ${resourceFieldName}) UNION ALL SELECT obj.* FROM ${_dbSchema}.relationships obj INNER JOIN ${_dbSchema}.relationshipproperties secondId ON (secondId.relationships_id = obj.id AND secondId.propkey = '/secondId' AND secondId.propvalue = ${fullResourceId}) INNER JOIN ${_dbSchema}.relationshipproperties secondPropertyName ON (secondPropertyName.relationships_id = obj.id AND secondPropertyName.propkey = '/secondPropertyName' AND secondPropertyName.propvalue = ${resourceFieldName}) "
    }
]
