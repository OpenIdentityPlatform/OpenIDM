[
    {
        "operation" : "add",
        "field" : "/commands/explicitTables/delete-mapping-links",
        "value" : "DELETE FROM ${_dbSchema}.${_table} WHERE linktype = ${mapping}"
    },
    {
        "operation" : "remove",
        "field" : "/resourceMapping/explicitMapping/security"
    },
    {
        "operation" : "replace",
        "field" : "/queries/explicitTables/get-recons",
        "value" : "SELECT reconid, activitydate, mapping FROM ${_dbSchema}.${_table} WHERE mapping LIKE ${includeMapping} AND mapping NOT LIKE ${excludeMapping} AND entrytype = 'summary' ORDER BY activitydate DESC"
    },
    {
        "operation" : "replace",
        "field" : "/commands/explicitTables/purge-by-recon-ids-to-keep",
        "value" : "DELETE FROM ${_dbSchema}.${_table} WHERE mapping LIKE ${includeMapping} AND mapping NOT LIKE ${excludeMapping} AND reconid NOT IN (${list:reconIds})"
    },
    {
        "operation" : "replace",
        "field" : "/commands/explicitTables/purge-by-recon-expired",
        "value" : "DELETE FROM ${_dbSchema}.${_table} WHERE mapping LIKE ${includeMapping} AND mapping NOT LIKE ${excludeMapping} AND activitydate < ${timestamp}"
    },
    {
        "operation" : "move",
        "from" : "/resourceMapping/explicitMapping/audit%2Fconfig/objectToColumn/runas",
        "field" : "/resourceMapping/explicitMapping/audit%2Fconfig/objectToColumn/runAs"
    },
    {
        "operation" : "add",
        "field" : "/resourceMapping/explicitMapping/audit%2Faccess/objectToColumn/response%2Fdetail",
        "value" : {"column" : "response_detail", "type" : "JSON_MAP"}
    },
    {
        "operation" : "add",
        "field" : "/queries/genericTables/find-relationship-edges",
        "value" : "SELECT obj.* FROM ${_dbSchema}.relationships obj INNER JOIN ${_dbSchema}.relationshipproperties firstId ON firstId.relationships_id = obj.id AND firstId.propkey = '/firstId' INNER JOIN ${_dbSchema}.relationshipproperties firstPropertyName ON firstPropertyName.relationships_id = obj.id AND firstPropertyName.propkey = '/firstPropertyName' INNER JOIN ${_dbSchema}.relationshipproperties secondId ON secondId.relationships_id = obj.id AND secondId.propkey = '/secondId' INNER JOIN ${_dbSchema}.relationshipproperties secondPropertyName ON secondPropertyName.relationships_id = obj.id AND secondPropertyName.propkey = '/secondPropertyName' WHERE ((firstId.propvalue = ${vertex1Id} AND firstPropertyName.propvalue = ${vertex1FieldName}) AND (secondId.propvalue = ${vertex2Id} AND secondPropertyName.propvalue = ${vertex2FieldName})) UNION ALL SELECT obj.* FROM ${_dbSchema}.relationships obj INNER JOIN ${_dbSchema}.relationshipproperties firstId ON firstId.relationships_id = obj.id AND firstId.propkey = '/firstId' INNER JOIN ${_dbSchema}.relationshipproperties firstPropertyName ON firstPropertyName.relationships_id = obj.id AND firstPropertyName.propkey = '/firstPropertyName' INNER JOIN ${_dbSchema}.relationshipproperties secondId ON secondId.relationships_id = obj.id AND secondId.propkey = '/secondId' INNER JOIN ${_dbSchema}.relationshipproperties secondPropertyName ON secondPropertyName.relationships_id = obj.id AND secondPropertyName.propkey = '/secondPropertyName' WHERE ((firstId.propvalue = ${vertex2Id} AND firstPropertyName.propvalue = ${vertex2FieldName}) AND (secondId.propvalue = ${vertex1Id} AND secondPropertyName.propvalue = ${vertex1FieldName}))"
    },
    {
        "operation" : "replace",
        "field" : "find-relationships-for-resource",
        "value" : "SELECT fullobject::text FROM ${_dbSchema}.relationships obj WHERE (((json_extract_path_text(obj.fullobject, 'firstId') = (${fullResourceId})) AND (json_extract_path_text(obj.fullobject, 'firstPropertyName') = (${resourceFieldName})))) OR (((json_extract_path_text(obj.fullobject, 'secondId') = (${fullResourceId})) AND (json_extract_path_text(obj.fullobject, 'secondPropertyName') = (${resourceFieldName}))))"
    }
]
