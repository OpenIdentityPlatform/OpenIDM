<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
  ~
  ~ Copyright (c) 2011-2014 ForgeRock AS. All Rights Reserved
  ~
  ~ The contents of this file are subject to the terms
  ~ of the Common Development and Distribution License
  ~ (the License). You may not use this file except in
  ~ compliance with the License.
  ~
  ~ You can obtain a copy of the License at
  ~ http://forgerock.org/license/CDDLv1.0.html
  ~ See the License for the specific language governing
  ~ permission and limitations under the License.
  ~
  ~ When distributing Covered Code, include this CDDL
  ~ Header Notice in each file and include the License file
  ~ at http://forgerock.org/license/CDDLv1.0.html
  ~ If applicable, add the following below the CDDL Header,
  ~ with the fields enclosed by brackets [] replaced by
  ~ your own identifying information:
  ~ "Portions Copyrighted [year] [name of copyright owner]"
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>openidm-ui</artifactId>
    <groupId>org.forgerock.openidm</groupId>
    <version>3.1.0-SNAPSHOT</version>
  </parent>

  <artifactId>openidm-ui-enduser</artifactId>
  <name>OpenIDM UI End-user</name>
  <packaging>bundle</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.forgerock.commons.ui</groupId>
      <artifactId>forgerock-ui-user</artifactId>
      <version>${forgerock-ui.version}</version>
      <type>zip</type>
      <classifier>www</classifier>
    </dependency>

    <dependency>
      <groupId>org.forgerock.openidm</groupId>
      <artifactId>openidm-ui-common</artifactId>
      <version>${openidm.version}</version>
      <type>zip</type>
      <classifier>www</classifier>
    </dependency>

    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.rhino</artifactId>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <!-- the profile to build the non-optimized UI -->
      <id>Non optimized UI</id>
      <activation>
        <property>
          <name>!openidm.ui.optimize</name>
        </property>
      </activation>

      <build>
        <resources>
          <resource>
            <directory>${basedir}/src/main/js</directory>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources</directory>
          </resource>
        </resources>

        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jslint-maven-plugin</artifactId>
            <configuration>
              <disallowInsecureCharsInRegExp>false</disallowInsecureCharsInRegExp>
              <excludes>
                <exclude>**/libs/*.js</exclude>
                <exclude>**/*Test.js</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>jslint</goal>
                </goals>
              </execution>
            </executions>
          </plugin>   

          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
              </execution>
            </executions>
          </plugin>   
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>unpack</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.forgerock.commons.ui</groupId>
                      <artifactId>forgerock-ui-user</artifactId>
                      <version>${forgerock-ui.version}</version>
                      <type>zip</type>
                      <classifier>www</classifier>
                    </artifactItem>

                    <artifactItem>
                      <groupId>org.forgerock.openidm</groupId>
                      <artifactId>openidm-ui-common</artifactId>
                      <version>${openidm.version}</version>
                      <type>zip</type>
                      <classifier>www</classifier>
                    </artifactItem>

                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
                <descriptors>
                    <descriptor>src/main/assembly/zip.xml</descriptor>
                </descriptors>
                <finalName>www</finalName>
                <appendAssemblyId>false</appendAssemblyId>
            </configuration>
            <executions>
                <execution>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <executions>
              <execution>
                  <id>bundle-manifest</id>
                  <phase>package</phase>
                  <goals>
                      <goal>manifest</goal>
                  </goals>
              </execution>
            </executions>
            <configuration>
              <instructions>
                <Import-Package>*</Import-Package>
                <Include-Resource>
                    public=target/www
                </Include-Resource>
              </instructions>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <!-- the profile to build the optimized UI -->
      <id>Optimized UI</id>
      <activation>
        <property>
          <name>openidm.ui.optimize</name>
        </property>
      </activation>

      <build>
        <resources>
          <resource>
            <directory>${basedir}/src/main/js</directory>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources</directory>
          </resource>
        </resources>

        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jslint-maven-plugin</artifactId>
            <configuration>
              <excludes>
                <exclude>**/libs/*.js</exclude>
                <exclude>**/*Test.js</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>jslint</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
 
          <plugin>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
              <execution>
                <phase>prepare-package</phase>
                <goals>
                  <goal>resources</goal>
                </goals>
              </execution>
            </executions>
          </plugin>  
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-and-unpack</id>
                <phase>prepare-package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                  <goal>unpack</goal>
                </goals>
                <configuration>
                  <includeGroupIds>org.apache.servicemix.bundles</includeGroupIds>
                  <artifactItems>
                    <artifactItem>
                      <groupId>org.forgerock.commons.ui</groupId>
                      <artifactId>forgerock-ui-user</artifactId>
                      <version>${forgerock-ui.version}</version>
                      <type>zip</type>
                      <classifier>www</classifier>
                    </artifactItem>
                    <artifactItem>
                      <groupId>org.forgerock.openidm</groupId>
                      <artifactId>openidm-ui-common</artifactId>
                      <version>${openidm.version}</version>
                      <type>zip</type>
                      <classifier>www</classifier>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>js/css optimization</id>
                <phase>prepare-package</phase>

                <configuration>
                  <target name="optimize">

                    <path id="class.path">
                      <fileset dir="target/dependency">
                        <include name="**/*.jar" />
                      </fileset>
                    </path>
                    
                    <copy todir="target/classes" overwrite="false">
                      <fileset dir="target/dependency"/>
                    </copy>
                    <echo message="Running optimize." />

                    <property name="requirejs.dir" value="${basedir}/src/main/optimization" />

                    <java classname="org.mozilla.javascript.tools.shell.Main"
                      failonerror="true">
                      <classpath refid="class.path" />
                      <arg value="${requirejs.dir}/r.js" />
                      <arg value="-o" />
                      <arg value="${requirejs.dir}/app.build.js" />
                    </java>
                    
                    <concat destfile="target/minified/main_with_license.js">
                      <fileset file="src/main/optimization/license" />
                      <fileset file="target/minified/main.js" />
                    </concat>
                    
                    <move file="target/minified/main_with_license.js" tofile="target/minified/main.js" />
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
                <descriptors>
                    <descriptor>src/main/assembly/zip.xml</descriptor>
                </descriptors>
                <finalName>www</finalName>
                <appendAssemblyId>false</appendAssemblyId>
            </configuration>
            <executions>
                <execution>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>single</goal>
                    </goals>
                </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <extensions>true</extensions>
            <executions>
              <execution>
                  <id>bundle-manifest</id>
                  <phase>package</phase>
                  <goals>
                      <goal>manifest</goal>
                  </goals>
              </execution>
            </executions>
            <configuration>
              <instructions>
                <Import-Package>*</Import-Package>
                <Include-Resource>
                    public=target/www
                </Include-Resource>
                <Bundle-SymbolicName>${project.groupId}.ui.enduser</Bundle-SymbolicName>
              </instructions>
            </configuration>
          </plugin>
        </plugins>
      </build>         
    </profile>

  </profiles>
</project>

